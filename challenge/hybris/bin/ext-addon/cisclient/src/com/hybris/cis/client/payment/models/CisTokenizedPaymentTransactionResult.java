/*
 * [y] hybris Platform
 *
 * Copyright (c) 2018 SAP SE or an SAP affiliate company.  All rights reserved.
 *
 * This software is the confidential and proprietary information of SAP
 * ("Confidential Information"). You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms of the
 * license agreement you entered into with SAP.
 */
package com.hybris.cis.client.payment.models;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;


/**
 * The result of a tokenized payment transaction such as authorizing or capturing.
 */
@XmlRootElement(name = "tokenizedPaymentTransactionResult")
@XmlAccessorType(XmlAccessType.FIELD)
public class CisTokenizedPaymentTransactionResult extends CisPaymentTransactionResult
{
	/**
	 * Timestamped token by which you identify to PayPal that you are processing this payment with Express Checkout. You
	 * need to save this value to send in future request messages.
	 */
	@XmlElement(name = "paymentToken")
	private String paymentToken;

	/**
	 * Identifier for the request generated by the client.
	 */
	@XmlElement(name = "requestId")
	private String requestId;

	/**
	 * Request token data created by CyberSource for each reply. The field is an encoded string that contains no
	 * confidential information, such as an account or card verification number. The string can contain up to 256
	 * characters.
	 */
	@XmlElement(name = "requestToken")
	private String requestToken;

	/** Specifies the session url provided by the third party. */
	@XmlElement(name = "initSessionUrl")
	private String initSessionUrl;

	/** Specifies the payer id. */
	@XmlElement(name = "payerId")
	private String payerId;

	/** Specifies the customer email address used at profile setup. */
	@XmlElement(name = "customerEmail")
	private String customerEmail;

	public String getPaymentToken()
	{
		return this.paymentToken;
	}

	public void setPaymentToken(final String paymentToken)
	{
		this.paymentToken = paymentToken;
	}

	public String getRequestToken()
	{
		return this.requestToken;
	}

	public void setRequestToken(final String requestToken)
	{
		this.requestToken = requestToken;
	}

	public String getRequestId()
	{
		return this.requestId;
	}

	public void setRequestId(final String requestId)
	{
		this.requestId = requestId;
	}

	public String getInitSessionUrl()
	{
		return this.initSessionUrl;
	}

	public void setInitSessionUrl(final String initSessionUrl)
	{
		this.initSessionUrl = initSessionUrl;
	}

	public String getCustomerEmail()
	{
		return this.customerEmail;
	}

	public void setCustomerEmail(final String customerEmail)
	{
		this.customerEmail = customerEmail;
	}

	public String getPayerId()
	{
		return this.payerId;
	}

	public void setPayerId(final String payerId)
	{
		this.payerId = payerId;
	}

	@Override
	public String toString()
	{
		return "CisPaymentTransactionResult [request=" + this.getRequest() + ", amount=" + this.getAmount() + ", balance="
				+ this.getBalance() + ", transactionVerificationKey=" + this.getTransactionVerificationKey()
				+ ", clientAuthorizationId=" + this.getClientAuthorizationId() + ", decision=" + this.getDecision() + ", id="
				+ this.getId() + ", vendorReasonCode=" + this.getVendorReasonCode() + ", vendorStatusCode="
				+ this.getVendorStatusCode() + ", clientRefId=" + this.getClientRefId() + ", paymentToken=" + this.getPaymentToken()
				+ ", requestId=" + this.getRequestId() + ", requestToken=" + this.getRequestToken() + ", initSessionUrl="
				+ this.initSessionUrl + ", payerId=" + this.payerId + ", customerEmail=" + this.customerEmail + "]";
	}
}
