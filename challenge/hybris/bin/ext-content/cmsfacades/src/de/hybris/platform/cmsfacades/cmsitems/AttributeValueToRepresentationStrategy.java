/*
 * [y] hybris Platform
 *
 * Copyright (c) 2018 SAP SE or an SAP affiliate company. All rights reserved.
 *
 * This software is the confidential and proprietary information of SAP
 * ("Confidential Information"). You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms of the
 * license agreement you entered into with SAP.
 */
package de.hybris.platform.cmsfacades.cmsitems;

import de.hybris.platform.core.model.ItemModel;
import de.hybris.platform.core.model.type.AttributeDescriptorModel;

import java.util.function.Function;
import java.util.function.Supplier;


/**
 * Interface that specifies the different ways to transform an attribute, depending on its type, to its
 * corresponding representation.
 */
public interface AttributeValueToRepresentationStrategy
{

	/**
	 * This function is used to retrieve a Supplier that can be used to get the representation of the value of an attribute. This
	 * representation is generated by applying the provided transformation function.
	 *
	 * @param attribute The object describing the attribute whose value will be transformed.
	 * @param sourceModel The model containing the value that will be transformed.
	 * @param transformationFunction The function that will be used to transform the value into the expected object.
	 * @return A {@link Supplier}. Use get() to retrieve the transformed object.
	 */
	Supplier<Object> getSimpleGetter(AttributeDescriptorModel attribute, ItemModel sourceModel, Function<Object, Object> transformationFunction);

	/**
	 * This function is used to retrieve a {@link Supplier} that can be used to get the representation of a collection stored in an attribute. This
	 * representation is generated by leveraging the provided transformation function.
	 *
	 * @param attribute The object describing the attribute whose value will be transformed.
	 * @param sourceModel The model containing the collection that will be transformed.
	 * @param transformationFunction The function that will be used to transform the collection into the expected representation.
	 * @return A {@link Supplier}. Use get() to retrieve the transformed collection.
	 */
	Supplier<Object> getCollectionGetter(AttributeDescriptorModel attribute, ItemModel sourceModel, Function<Object, Object> transformationFunction);

	/**
	 * This function is used to retrieve a {@link Supplier} that can be used to get the representation of a localized value stored in an attribute.
	 * This representation is generated by leveraging the provided transformation function.
	 *
	 * @param attribute The object describing the attribute whose value will be transformed.
	 * @param sourceModel The model containing the localized value that will be transformed.
	 * @param transformationFunction The function that will be used to transform the localized value into the expected representation.
	 * @return A {@link Supplier}. Use get() to retrieve the transformed localized value.
	 */
	Supplier<Object> getLocalizedGetter(AttributeDescriptorModel attribute, ItemModel sourceModel, Function<Object, Object> transformationFunction);

	/**
	 * This function is used to retrieve a {@link Supplier} that can be used to get the representation of a localized collection value stored
	 * in an attribute.
	 * This representation is generated by leveraging the provided transformation function.
	 *
	 * @param attribute The object describing the attribute whose value will be transformed.
	 * @param sourceModel The model containing the localized collection value that will be transformed.
	 * @param transformationFunction The function that will be used to transform the localized collection value into the expected representation.
	 * @return A {@link Supplier}. Use get() to retrieve the transformed localized collection value.
	 */
	Supplier<Object> getLocalizedCollectionGetter(AttributeDescriptorModel attribute, ItemModel sourceModel, Function<Object, Object> transformationFunction);
}
