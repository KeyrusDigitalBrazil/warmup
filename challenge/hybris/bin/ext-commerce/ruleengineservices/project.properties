# -----------------------------------------------------------------------
# [y] hybris Platform
#
# Copyright (c) 2018 SAP SE or an SAP affiliate company.  All rights reserved.
#
# This software is the confidential and proprietary information of SAP
# ("Confidential Information"). You shall not disclose such Confidential
# Information and shall use it only in accordance with the terms of the
# license agreement you entered into with SAP.
# -----------------------------------------------------------------------

ruleengineservices.application-context=ruleengineservices-spring.xml

# Default priority for rule compiler listeners
ruleengineservices.compiler.listeners.priority.default=100

# Default priority for rule compiler RuleIrProcessors
ruleengineservices.compiler.ruleirprocessors.priority.default=100

# Default value for the pre-destroy timeout for async compiler task
ruleengineservices.compiler.task.predestroytimeout=3600000

# Default value for the guarded suspension timeout for rules compilation (in seconds)
ruleengineservices.compiler.guarded.suspension.timeout=2

# Default value for the number of threads allocated in tasks spliterator
ruleengineservice.spliterator.threads.number=1

# Allows to disable the check if rao providers are registered for the fact template cache
defaultCommerceRuleEngineCache.checkRAOProvidersForCache=true

# If set to false, will ignore errors for rule registration for auto-deployment after system initialization  
ruleengineservices.system.setup.failOnError=true

# Default value for the customer condition flag that notifies system to use customer model's PK value.
# In case this flag's value is set to 'false' - customer's UID (by default the email address) is used instead.
ruleengineservices.target.customer.condition.use.pk=true

# This property allows explicit configuration of the rule engine cron jobs to be executed solely on a specific node.
# Make sure to uncomment line below and specify node Id as a value, this will ensure that execution is performed only on that node.
# Please note if this property and 'ruleengineservices.cronjob.nodegroup' are defined, this property overrules the nodeGroup setting,
# cron job being executed exclusively on the respective node.
# If the value is not provided (default case) then any cluster node is able to execute rule engine cron jobs
# ruleengineservices.cronjob.nodeid=

# Cron job can be assigned to a group of nodes. It can then be executed by any of the nodes belonging to that group.
# If a node that is currently executing a cron job stops operating, one of the other nodes from that group takes over and executes it.
# To make use of this feature, please uncomment the line below and provide respective node group name as a value. This will ensure that all
# of the rule engine cron jobs are executed on the nodes that are part of that node group.
# ruleengineservices.cronjob.nodegroup=

# Specifies how many concurrent cronjob instances can run
ruleengineservices.cronjob.concurrent.max=3

# Each of the rule engine cron jobs are activated by a retryable trigger. By default execution time in between try outs is
# controlled by the 'cronjob.trigger.interval' value that has value of 30 seconds. In case a different execution interval is required,
# please make sure to provide a cron expression for the property below. As an example the following configuration ensures that trigger
# is invoked every 10 seconds
# ruleengineservices.cronjob.trigger.cronexpression=0/10 * * * * ?

ruleengineservices.mapper.value.catalogdelimiter=::

ruleengineservices.mapper.value.catalogversionname=Staged

# Source Rule
keygen.source_rule.code.name=source_rule_code
keygen.source_rule.code.digits=8
keygen.source_rule.code.start=00000000
keygen.source_rule.code.type=numeric
keygen.source_rule.code.template=$

# Constraints annotations mappings to attributes type groups
validation.constraints.attribute.mapping.de.hybris.platform.ruleengineservices.validation.constraints.ObjectPattern=strings

# log4j settings for drools compiler output
log4j2.logger.rule-maintenance.name = de.hybris.platform.ruleengineservices.maintenance.impl
log4j2.logger.rule-maintenance.level = INFO
log4j2.logger.rule-maintenance.appenderRef.stdout.ref = STDOUT
log4j2.logger.rule-maintenance.additivity = false
