package de.hybris.platform.ruleengineservices.test

import java.math.*;
import de.hybris.platform.ruleengineservices.rao.*;
import de.hybris.platform.ruleengineservices.rrd.*;
import de.hybris.platform.ruleengineservices.rule.evaluation.*;
import java.util.Map;
import de.hybris.platform.droolsruleengineservices.compiler.impl.DefaultDroolsRuleActionContext;

global de.hybris.platform.ruleengineservices.rule.evaluation.RuleExecutableAction ruleOrderEntryFixedPriceAction;

salience 10;

rule "fixedPrice_ConsumedEntries-rule"
@ruleCode("fixedPrice_ConsumedEntries-rule.drl")
@moduleName("rules-module-junit")
dialect "mvel"

    when
    	$config : RuleConfigurationRRD(ruleCode == "fixedPrice_ConsumedEntries-rule.drl")
        $groupExecution := RuleGroupExecutionRRD(code == $config.ruleGroupCode)
    	$orderEntry:OrderEntryRAO(product.getCode()=="123456", quantity > 0)
		$cart : CartRAO(entries contains $orderEntry)
		$result : RuleEngineResultRAO()
		not $discount:DiscountRAO(appliedToObject == $orderEntry )
		eval($groupExecution.allowedToExecute($config))
    then
    	Map variables = [
    		"de.hybris.platform.ruleengineservices.rao.CartRAO" : $cart,
      		"de.hybris.platform.ruleengineservices.rao.OrderEntryRAO" : $orderEntry,
      		"de.hybris.platform.ruleengineservices.rao.RuleEngineResultRAO" : $result
   		];
		ruleOrderEntryFixedPriceAction.executeAction(new DefaultDroolsRuleActionContext(variables, kcontext), ["value":["USD":new BigDecimal(20)]]);
		$groupExecution.trackRuleGroupExecution($config);    	
end