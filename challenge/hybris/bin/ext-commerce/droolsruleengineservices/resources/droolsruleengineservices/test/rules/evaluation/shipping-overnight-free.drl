package de.hybris.platform.ruleengineservices.test

import java.math.*;
import de.hybris.platform.ruleengineservices.rao.*;
import de.hybris.platform.ruleengineservices.rrd.*;
import de.hybris.platform.ruleengineservices.rule.evaluation.*;
import java.util.Map;
import de.hybris.platform.droolsruleengineservices.compiler.impl.DefaultDroolsRuleActionContext;

global de.hybris.platform.ruleengineservices.rule.evaluation.RuleExecutableAction ruleChangeDeliveryModeAction;

salience 30;
//cart with total greater than $200 gets free overnight delivery
rule "shipping-overnight-free"
@ruleCode("shipping-overnight-free.drl")
@moduleName("rules-module-junit")
dialect "mvel"

    when
    	$config : RuleConfigurationRRD(ruleCode == "shipping-overnight-free.drl")
		$groupExecution := RuleGroupExecutionRRD(code == $config.ruleGroupCode)
    	$cart:CartRAO(total > 200, currencyIsoCode == "USD")
    	$result:RuleEngineResultRAO()
    	// check if rule discount is not applied already (it gets inserted during the consequence's service call)
    	not $discount:ShipmentRAO( firedRuleCode == "shipping-overnight-free.drl" )
    	eval($groupExecution.allowedToExecute($config))
    then
    	Map variables = [
      		"de.hybris.platform.ruleengineservices.rao.CartRAO" : $cart,
      		"de.hybris.platform.ruleengineservices.rao.RuleEngineResultRAO" : $result
   		];
		ruleChangeDeliveryModeAction.executeAction(new DefaultDroolsRuleActionContext(variables, kcontext), ["delivery_mode":"free-overnight-domestic"]);
    	$groupExecution.trackRuleGroupExecution($config);
end
