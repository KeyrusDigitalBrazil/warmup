<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2018 SAP SE or an SAP affiliate company.  All rights reserved.

 This software is the confidential and proprietary information of SAP
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with SAP.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns:util="http://www.springframework.org/schema/util"
		 xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd">

	<import resource="commerceservices-spring-solrfacetsearch.xml" />

	<!--TODO: remove when port ticket PLA-13861 is resolved -->
	<alias name="commerceAbstractPopulatingConverter" alias="abstractPopulatingConverter"/>
	<bean id="commerceAbstractPopulatingConverter"
			class="de.hybris.platform.converters.impl.AbstractPopulatingConverter" abstract="true"/>


	<!-- Import the mock payment service (which is configured as the default) -->
	<import resource="/commerceservices/mock-payment-spring.xml"/>

	<bean id="commerceServicesSystemSetup" class="de.hybris.platform.commerceservices.setup.CommerceServicesSystemSetup">
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="importService" ref="importService"/>
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<alias name="defaultLanguageResolver" alias="languageResolver"/>
	<bean id="defaultLanguageResolver" class="de.hybris.platform.commerceservices.i18n.impl.CommerceLanguageResolver"
			>
		<property name="commerceCommonI18NService" ref="commerceCommonI18NService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>

	<bean id="contactEmailAttribute" class="de.hybris.platform.commerceservices.model.ContactEmailAttribute">
		<property name="customerEmailResolutionService" ref="customerEmailResolutionService"/>
	</bean>

	<bean id="organizationRolesAttribute" class="de.hybris.platform.commerceservices.model.OrganizationRolesAttribute">
		<property name="orgUnitService" ref="orgUnitService"/>
	</bean>

	<bean id="consentActiveAttributeHandler" class="de.hybris.platform.commerceservices.model.ConsentActiveAttribute" />

	<bean id="abstractSiteEventListener" class="de.hybris.platform.commerceservices.event.AbstractSiteEventListener"
			parent="abstractEventListener" abstract="true"/>


	<alias name="defaultGuidKeyGenerator" alias="guidKeyGenerator"/>
	<bean id="defaultGuidKeyGenerator" class="de.hybris.platform.commerceservices.util.GuidKeyGenerator"/>

	<alias alias="commerceCartService" name="defaultCommerceCartService"/>
	<bean id="defaultCommerceCartService"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceCartService">
		<property name="modelService" ref="modelService"/>
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="commerceCartDao" ref="commerceCartDao"/>
		<property name="cartValidationStrategy" ref="cartValidationStrategy"/>
		<property name="commerceCartCalculationStrategy" ref="commerceCartCalculationStrategy"/>
		<property name="commerceCartEstimateTaxesStrategy" ref="commerceCartEstimateTaxesStrategy"/>
		<property name="commerceCartHashCalculationStrategy" ref="commerceCartHashCalculationStrategy"/>
		<property name="sessionService" ref="sessionService"/>
		<property name="staleCartRemovalStrategy" ref="staleCartRemovalStrategy"/>
		<property name="commerceAddToCartStrategy" ref="commerceAddToCartStrategy"/>
		<property name="commerceUpdateCartEntryStrategy" ref="commerceUpdateCartEntryStrategy"/>
		<property name="commerceCartRestorationStrategy" ref="commerceCartRestorationStrategy"/>
		<property name="commerceCartSplitStrategy" ref="commerceCartSplitStrategy"/>
		<property name="commerceRemoveEntriesStrategy" ref="commerceRemoveEntriesStrategy"/>
		<property name="commerceCartMergingStrategy" ref="commerceCartMergingStrategy"/>
		<property name="commerceCartMetadataUpdateStrategy" ref="commerceCartMetadataUpdateStrategy"/>
        <property name="productConfigurationStrategy" ref="productConfigurationStrategy"/>
		<property name="removeEntryGroupStrategy" ref="removeEntryGroupStrategy"/>
    </bean>

	<alias alias="commerceQuoteService" name="defaultCommerceQuoteService"/>
	<bean id="defaultCommerceQuoteService" class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceQuoteService">
		<property name="commerceQuoteDao" ref="commerceQuoteDao"/>
		<property name="cartService" ref="cartService"/>
		<property name="modelService" ref="modelService"/>
		<property name="commerceSaveCartService" ref="commerceSaveCartService"/>
		<property name="sessionService" ref="sessionService"/>
		<property name="commerceCartService" ref="commerceCartService"/>
		<property name="quoteStateSelectionStrategy" ref="quoteStateSelectionStrategy"/>
		<property name="quoteActionValidationStrategy" ref="quoteActionValidationStrategy"/>
		<property name="quoteUpdateStateStrategy" ref="quoteUpdateStateStrategy"/>
		<property name="calculationService" ref="calculationService"/>
		<property name="quoteService" ref="quoteService" />
		<property name="eventService" ref="eventService" />
		<property name="updateQuoteFromCartStrategy" ref="updateQuoteFromCartStrategy"/>
		<property name="quoteAssignmentValidationStrategy" ref="quoteAssignmentValidationStrategy"/>
		<property name="quoteSnapshotStateTransitionMap" ref="quoteSnapshotStateTransitionMap"/>
		<property name="quoteUserTypeIdentificationStrategy" ref="quoteUserTypeIdentificationStrategy"/>
		<property name="quoteSellerApproverAutoApprovalStrategy" ref="quoteSellerApproverAutoApprovalStrategy"/>
		<property name="quoteCartValidationStrategy" ref="quoteCartValidationStrategy"/>
		<property name="quoteExpirationTimeValidationStrategy" ref="quoteExpirationTimeValidationStrategy"/>
		<property name="quoteUpdateExpirationTimeStrategy" ref="quoteUpdateExpirationTimeStrategy"/>
		<property name="quoteMetadataValidationStrategy" ref="quoteMetadataValidationStrategy"/>
		<property name="requoteStrategy" ref="requoteStrategy"/>
		<property name="orderQuoteDiscountValuesAccessor" ref="orderQuoteDiscountValuesAccessor"/>
		<property name="userService" ref="userService" />
		<property name="commerceQuoteUtils" ref="commerceQuoteUtils"/>
	</bean>

	<alias alias="commerceOrderService" name="defaultCommerceOrderService"/>
	<bean id="defaultCommerceOrderService" class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceOrderService">
		<property name="commerceOrderDao" ref="commerceOrderDao"/>
	</bean>

	<alias name="defaultQuoteExpirationTimeValidationStrategy" alias="quoteExpirationTimeValidationStrategy" />
	<bean id="defaultQuoteExpirationTimeValidationStrategy" class="de.hybris.platform.commerceservices.order.strategies.impl.DefaultQuoteExpirationTimeValidationStrategy">
		<property name="timeService" ref="timeService" />
	</bean>


	<alias alias="commerceCommentService" name="defaultCommerceCommentService"/>
	<bean id="defaultCommerceCommentService"
			class="de.hybris.platform.commerceservices.comments.impl.DefaultCommerceCommentService" parent="defaultCommentService">
		<property name="commentsKeyGenerator" ref="commentsCodeGenerator"/>
	</bean>

	<alias alias="updateQuoteFromCartStrategy" name="defaultUpdateQuoteFromCartStrategy"/>
	<bean id="defaultUpdateQuoteFromCartStrategy"
			class=" de.hybris.platform.commerceservices.order.impl.DefaultUpdateQuoteFromCartStrategy" parent="genericAbstractOrderCloningStrategy" />

	<alias alias="createCartFromQuoteStrategy" name="commerceCreateCartFromQuoteStrategy"/>
	<bean id="commerceCreateCartFromQuoteStrategy"
			class=" de.hybris.platform.commerceservices.order.impl.CommerceCreateCartFromQuoteStrategy" parent="defaultCreateCartFromQuoteStrategy" />

	<alias alias="quoteAssignmentValidationStrategy" name="defaultQuoteAssignmentValidationStrategy"/>
	<bean id="defaultQuoteAssignmentValidationStrategy"
			class=" de.hybris.platform.commerceservices.order.strategies.impl.DefaultQuoteAssignmentValidationStrategy" />

	<alias alias="commerceRemoveEntriesStrategy" name="defaultCommerceRemoveEntriesStrategy"/>
	<bean id="defaultCommerceRemoveEntriesStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceRemoveEntriesStrategy">
		<property name="modelService" ref="modelService"/>
	</bean>

	<alias name="defaultAbstractCommerceCartStrategy" alias="abstractCommerceCartStrategy"/>
	<bean id="defaultAbstractCommerceCartStrategy"
			class="de.hybris.platform.commerceservices.order.impl.AbstractCommerceCartStrategy" abstract="true">
		<property name="productService" ref="productService"/>
		<property name="cartService" ref="cartService"/>
		<property name="modelService" ref="modelService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="commerceStockService" ref="commerceStockService"/>
		<property name="entryOrderChecker" ref="commerceOrderEntryModifiableChecker"/>
		<property name="cartEntryDao" ref="cartEntryDao"/>
		<property name="commerceCartCalculationStrategy" ref="commerceCartCalculationStrategy"/>
	</bean>

	<alias name="defaultAbstractCommerceAddToCartStrategy" alias="abstractCommerceAddToCartStrategy"/>
	<bean name="defaultAbstractCommerceAddToCartStrategy"
			class="de.hybris.platform.commerceservices.order.impl.AbstractCommerceAddToCartStrategy" abstract="true"
			parent="abstractCommerceCartStrategy"/>

	<util:list id="commerceAddToCartMethodHooks"
				  value-type="de.hybris.platform.commerceservices.order.hook.CommerceAddToCartMethodHook"/>

	<bean id="entryMergeFilterConfigurableProduct" class="de.hybris.platform.commerceservices.order.impl.EntryMergeFilterConfigurableProduct">
        <property name="productConfigurableChecker" ref="productConfigurableChecker" />
    </bean>

    <bean id="entryMergeFilterIsEntryUpdatable" class="de.hybris.platform.commerceservices.order.impl.EntryMergeFilterIsEntryUpdatable">
        <property name="entryOrderChecker" ref="commerceOrderEntryModifiableChecker" />
    </bean>

    <bean id="entryMergeFilterPointOfService" class="de.hybris.platform.commerceservices.order.impl.EntryMergeFilterPointOfService"/>

    <bean id="entryMergeFilterGiveAway" class="de.hybris.platform.commerceservices.order.impl.EntryMergeFilterGiveAway"/>

    <bean id="entryMergeFilterProduct" class="de.hybris.platform.commerceservices.order.impl.EntryMergeFilterProduct"/>

    <bean id="entryMergeFilterUnits" class="de.hybris.platform.commerceservices.order.impl.EntryMergeFilterUnits"/>

    <bean id="entryMergeFilterEntryGroup" class="de.hybris.platform.commerceservices.order.impl.EntryMergeFilterEntryGroup"/>

    <util:list id="commerceCartEntryMergeFilters" value-type="de.hybris.platform.commerceservices.order.EntryMergeFilter">
        <ref bean="entryMergeFilterEntryGroup"/>
        <ref bean="entryMergeFilterGiveAway"/>
        <ref bean="entryMergeFilterProduct"/>
        <ref bean="entryMergeFilterUnits"/>
        <ref bean="entryMergeFilterPointOfService"/>
        <ref bean="entryMergeFilterConfigurableProduct"/>
        <ref bean="entryMergeFilterIsEntryUpdatable"/>
    </util:list>

    <alias name="defaultCommerceAddToCartStrategy" alias="commerceAddToCartStrategy"/>
	<bean id="defaultCommerceAddToCartStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceAddToCartStrategy"
			parent="abstractCommerceAddToCartStrategy">
		<property name="commerceAddToCartMethodHooks" ref="commerceAddToCartMethodHooks"/>
        <property name="entryMergeStrategy" ref="entryMergeStrategy"/>
		<property name="configurationService" ref="configurationService"/>
	</bean>

    <alias name="defaultEntryMergeStrategy" alias="entryMergeStrategy"/>
    <bean id="defaultEntryMergeStrategy" class="de.hybris.platform.commerceservices.order.strategies.impl.DefaultEntryMergeStrategy">
        <property name="entryMergeFilters" ref="commerceCartEntryMergeFilters"/>
    </bean>

    <!--<alias name="commerceAddToCartStrictStrategy" alias="commerceAddToCartStrategy"/>-->
	<bean id="commerceAddToCartStrictStrategy"
			class="de.hybris.platform.commerceservices.order.impl.CommerceAddToCartStrictStrategy"
			parent="defaultCommerceAddToCartStrategy"/>

	<!--  Adding before and after strategies via a listMergeDirective

		 <bean id="commerceAddToCartMethodHooksListMergeDirective" depends-on="commerceAddToCartMethodHooks" parent="listMergeDirective" >
			<property name="add" ref="myBean" />
		</bean>
	-->
	<util:list id="commerceUpdateCartEntryMethodHooks"
				  value-type="de.hybris.platform.commerceservices.order.hook.CommerceUpdateCartEntryHook"/>

	<alias name="defaultCommerceUpdateCartEntryStrategy" alias="commerceUpdateCartEntryStrategy"/>
	<bean id="defaultCommerceUpdateCartEntryStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceUpdateCartEntryStrategy"
			parent="abstractCommerceCartStrategy">
		<property name="commerceUpdateCartEntryHooks" ref="commerceUpdateCartEntryMethodHooks"/>
		<property name="configurationService" ref="configurationService"/>
        <property name="entryMergeStrategy" ref="entryMergeStrategy"/>
	</bean>

    <!--<alias name="commerceUpdateCartEntryStrictStrategy" alias="commerceUpdateCartEntryStrategy"/>-->
	<bean id="commerceUpdateCartEntryStrictStrategy"
			class="de.hybris.platform.commerceservices.order.impl.CommerceUpdateCartEntryStrictStrategy"
			parent="abstractCommerceCartStrategy">
		<property name="commerceUpdateCartEntryHooks" ref="commerceUpdateCartEntryMethodHooks"/>
		<property name="configurationService" ref="configurationService"/>
        <property name="entryMergeStrategy" ref="entryMergeStrategy"/>
	</bean>

	<alias name="defaultCommerceCartSplitStrategy" alias="commerceCartSplitStrategy"/>
	<bean id="defaultCommerceCartSplitStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceCartSplitStrategy"
			parent="abstractCommerceCartStrategy">
		<property name="commerceUpdateCartEntryStrategy" ref="commerceUpdateCartEntryStrategy"/>
		<property name="commerceAddToCartStrategy" ref="commerceAddToCartStrategy"/>
	</bean>

	<alias name="defaultCommerceCartRestorationStrategy" alias="commerceCartRestorationStrategy"/>
	<bean id="defaultCommerceCartRestorationStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceCartRestorationStrategy"
			parent="abstractCommerceCartStrategy">
		<property name="timeService" ref="timeService"/>
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="cartFactory" ref="cartFactory"/>
		<property name="commerceCommonI18NService" ref="commerceCommonI18NService"/>
		<property name="commerceAddToCartStrategy" ref="commerceAddToCartStrategy"/>
		<property name="guidKeyGenerator" ref="guidKeyGenerator"/>
		<property name="cartValidityPeriod" value="${commerceservices.cartValidityPeriod}" />
	</bean>

	<alias name="defaultCommerceCartMergingStrategy" alias="commerceCartMergingStrategy"/>
	<bean id="defaultCommerceCartMergingStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceCartMergingStrategy"
			parent="abstractCommerceCartStrategy">
		<property name="userService" ref="userService"/>
		<property name="commerceCartService" ref="commerceCartService"/>
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="entryMergeStrategy" ref="entryMergeStrategy"/>
        <property name="entryGroupService" ref="entryGroupService"/>
	</bean>

	<alias name="defaultCommerceWebServicesCartService" alias="commerceWebServicesCartService"/>
	<bean id="defaultCommerceWebServicesCartService" parent="defaultCommerceCartService">
		<property name="cartValidationStrategy" ref="cartValidationWithoutCartAlteringStrategy"/>
        <property name="productConfigurationStrategy" ref="productConfigurationStrategy"/>
    </bean>

	<util:list id="commerceCartCalculationMethodHooks"
				  value-type="de.hybris.platform.commerceservices.order.hook.CommerceCartCalculationMethodHook"/>

	<alias alias="commerceCartCalculationStrategy" name="defaultCommerceCartCalculationStrategy"/>
	<bean id="defaultCommerceCartCalculationStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceCartCalculationStrategy">
		<property name="calculationService" ref="calculationService"/>
		<property name="promotionsService" ref="promotionsService"/>
		<property name="timeService" ref="timeService"/>
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="configurationService" ref="configurationService"/>
		<property name="commerceCartCalculationMethodHooks" ref="commerceCartCalculationMethodHooks"/>
		<property name="externalTaxesService" ref="externalTaxesService"/>
		<property name="calculateExternalTaxes" value="false"/>
	</bean>

	<alias alias="checkoutCartCalculationStrategy" name="defaultCheckoutCartCalculationStrategy"/>
	<bean id="defaultCheckoutCartCalculationStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceCartCalculationStrategy"
			parent="defaultCommerceCartCalculationStrategy">
		<property name="calculateExternalTaxes" value="true"/>
	</bean>


	<alias alias="commerceCartEstimateTaxesStrategy" name="defaultCommerceCartEstimateTaxesStrategy"/>
	<bean id="defaultCommerceCartEstimateTaxesStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceCartEstimateTaxesStrategy"/>

	<alias alias="commerceCartHashCalculationStrategy" name="defaultCartHashCalculationStrategy"/>
	<bean id="defaultCartHashCalculationStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceCartHashCalculationStrategy"/>


    <util:map id="productConfigurationHandlers"
              key-type="de.hybris.platform.commerceservices.enums.ProductConfiguratorEnum"
              value-type="de.hybris.platform.commerceservices.order.ProductConfigurationHandler"/>

    <alias name="defaultProductConfigurationHandlerFactory" alias="productConfigurationHandlerFactory" />
    <bean id="defaultProductConfigurationHandlerFactory"
          class="de.hybris.platform.commerceservices.order.impl.DefaultProductConfigurationHandlerFactory">
        <property name="registeredHandlers" ref="productConfigurationHandlers"/>
    </bean>

    <alias name="defaultConfigurableProductAddToCartMethodHook" alias="configurableProductAddToCartMethodHook"/>
    <bean id="defaultConfigurableProductAddToCartMethodHook"
          class="de.hybris.platform.commerceservices.order.hook.impl.ConfigurableProductAddToCartMethodHook">
        <property name="configurationFactory" ref="productConfigurationHandlerFactory" />
        <property name="modelService" ref="modelService" />
        <property name="configuratorSettingsService" ref="configuratorSettingsService"/>
    </bean>

    <alias name="defaultProductConfigurationStrategy" alias="productConfigurationStrategy"/>
    <bean id="defaultProductConfigurationStrategy"
          class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceCartProductConfigurationStrategy">
        <property name="modelService" ref="modelService"/>
        <property name="configurationHandlerFactory" ref="productConfigurationHandlerFactory"/>
        <property name="cartService" ref="cartService"/>
    </bean>

    <bean id="commerceAddToCartProductConfigMergeDirective" depends-on="commerceAddToCartMethodHooks" parent="listMergeDirective" >
        <property name="add" ref="configurableProductAddToCartMethodHook" />
    </bean>

	<alias name="defaultCommerceCartMetadataUpdateValidationHook" alias="commerceCartMetadataUpdateValidationHook"/>
	<bean id="defaultCommerceCartMetadataUpdateValidationHook"
		  class="de.hybris.platform.commerceservices.order.hook.impl.DefaultCommerceCartMetadataUpdateValidationHook">
	</bean>

	<alias name="defaultQuoteCommerceCartMetadataUpdateValidationHook" alias="quoteCommerceCartMetadataUpdateValidationHook"/>
	<bean id="defaultQuoteCommerceCartMetadataUpdateValidationHook"
		  class="de.hybris.platform.commerceservices.order.hook.impl.QuoteCommerceCartMetadataUpdateValidationHook">
		<property name="quoteActionValidationStrategy" ref="quoteActionValidationStrategy"/>
		<property name="quoteUserIdentificationStrategy" ref="quoteUserIdentificationStrategy"/>
		<property name="quoteUserTypeIdentificationStrategy" ref="quoteUserTypeIdentificationStrategy"/>
		<property name="timeService" ref="timeService"/>
	</bean>

	<util:list id="commerceCartMetadataUpdateMethodHooks"
			   value-type="de.hybris.platform.commerceservices.order.hook.CommerceCartMetadataUpdateMethodHook">
		<ref bean="quoteCommerceCartMetadataUpdateValidationHook"/>
		<ref bean="commerceCartMetadataUpdateValidationHook"/>
	</util:list>

	<alias name="defaultCommerceCartMetadataUpdateStrategy" alias="commerceCartMetadataUpdateStrategy"/>
	<bean id="defaultCommerceCartMetadataUpdateStrategy"
		  class="de.hybris.platform.commerceservices.order.strategies.impl.DefaultCommerceCartMetadataUpdateStrategy">
		<property name="commerceCartMetadataUpdateMethodHooks" ref="commerceCartMetadataUpdateMethodHooks"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<alias alias="commerceOrderDao" name="defaultCommerceOrderDao"/>
	<bean id="defaultCommerceOrderDao" class="de.hybris.platform.commerceservices.order.dao.impl.DefaultCommerceOrderDao"/>

	<alias alias="commerceQuoteDao" name="defaultCommerceQuoteDao"/>
	<bean id="defaultCommerceQuoteDao" class="de.hybris.platform.commerceservices.order.dao.impl.DefaultCommerceQuoteDao">
		<property name="pagedFlexibleSearchService" ref="pagedFlexibleSearchService"/>
	</bean>


	<alias alias="commerceCartDao" name="defaultCommerceCartDao"/>
	<bean id="defaultCommerceCartDao" class="de.hybris.platform.commerceservices.order.dao.impl.DefaultCommerceCartDao"
		  parent="abstractItemDao"/>

    <alias alias="saveCartDao" name="defaultSaveCartDao"/>
    <bean id="defaultSaveCartDao" class="de.hybris.platform.commerceservices.order.dao.impl.DefaultSaveCartDao"
            parent="commerceCartDao">
   		<property name="pagedFlexibleSearchService" ref="pagedFlexibleSearchService"/>
    </bean>

	<alias name="defaultCartEntryDao" alias="cartEntryDao"/>
	<bean id="defaultCartEntryDao" class="de.hybris.platform.commerceservices.order.dao.impl.DefaultCartEntryDao"
			parent="abstractItemDao"/>

	<alias alias="commerceCardTypeService" name="defaultCommerceCardTypeService"/>
	<bean id="defaultCommerceCardTypeService"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceCardTypeService">
		<property name="enumerationService" ref="enumerationService"/>
		<property name="typeService" ref="typeService"/>
	</bean>

	<alias alias="commerceOrderEntryModifiableChecker" name="orderEntryModifiableChecker"/>
	<bean id="orderEntryModifiableChecker"
			class="de.hybris.platform.commerceservices.order.impl.OrderEntryModifiableChecker"/>

	<alias alias="productConfigurableChecker" name="defaultProductConfigurableChecker"/>
	<bean id="defaultProductConfigurableChecker"
			class="de.hybris.platform.commerceservices.product.impl.DefaultProductConfigurableChecker">
		<property name="configuratorSettingsService" ref="configuratorSettingsService"/>
	</bean>

	<alias alias="countryZoneDeliveryModeDao" name="defaultCountryZoneDeliveryModeDao"/>
	<bean id="defaultCountryZoneDeliveryModeDao"
			class="de.hybris.platform.commerceservices.delivery.dao.impl.DefaultCountryZoneDeliveryModeDao"
			parent="abstractItemDao"
			/>

	<alias name="defaultPickupDeliveryModeDao" alias="pickupDeliveryModeDao"/>
	<bean id="defaultPickupDeliveryModeDao"
			class="de.hybris.platform.commerceservices.delivery.dao.impl.DefaultPickupDeliveryModeDao"
			parent="abstractItemDao"/>

	<alias name="defaultStorePickupDao" alias="storePickupDao"/>
	<bean id="defaultStorePickupDao" parent="abstractItemDao"
			class="de.hybris.platform.commerceservices.delivery.dao.impl.DefaultStorePickupDao"/>

	<alias name="defaultPickupStrategy" alias="pickupStrategy"/>
	<bean id="defaultPickupStrategy"
			class="de.hybris.platform.commerceservices.strategies.impl.DefaultPickupStrategy">
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="defaultPickupInStoreMode" value="DISABLED"/>
	</bean>

	<alias name="defaultPickupAvailabilityStrategy" alias="pickupAvailabilityStrategy"/>
	<bean id="defaultPickupAvailabilityStrategy"
			class="de.hybris.platform.commerceservices.strategies.impl.DefaultPickupAvailabilityStrategy">
		<property name="pickupStrategy" ref="pickupStrategy"/>
		<property name="stockLevelProductStrategy" ref="stockLevelProductID"/>
		<property name="storePickupDao" ref="storePickupDao"/>
	</bean>

	<alias alias="addressVerificationService" name="defaultAddressVerificationService"/>
	<bean id="defaultAddressVerificationService"
			class="de.hybris.platform.commerceservices.address.impl.DefaultAddressVerificationService"/>

	<alias alias="deliveryService" name="defaultDeliveryService"/>
	<bean id="defaultDeliveryService" class="de.hybris.platform.commerceservices.delivery.impl.DefaultDeliveryService">
		<property name="commerceCommonI18NService" ref="commerceCommonI18NService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="deliveryModeDao" ref="deliveryModeDao"/>
		<property name="deliveryAddressesLookupStrategy" ref="deliveryAddressesLookupStrategy"/>
		<property name="deliveryModeLookupStrategy" ref="deliveryModeLookupStrategy"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<alias alias="commerceCheckoutService" name="defaultCommerceCheckoutService"/>
	<bean id="defaultCommerceCheckoutService"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceCheckoutService">
		<property name="paymentService" ref="paymentService"/>
		<property name="modelService" ref="modelService"/>
		<property name="i18nService" ref="i18nService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="deliveryService" ref="deliveryService"/>
		<property name="commerceCartCalculationStrategy" ref="checkoutCartCalculationStrategy"/>
		<property name="orderService" ref="orderService"/>
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="promotionsService" ref="promotionsService"/>
		<property name="calculationService" ref="calculationService"/>
		<property name="externalTaxesService" ref="externalTaxesService"/>
		<property name="commercePlaceOrderStrategy" ref="commercePlaceOrderStrategy"/>
		<property name="commercePaymentAuthorizationStrategy" ref="commercePaymentAuthorizationStrategy"/>
		<property name="commercePaymentInfoStrategy" ref="commercePaymentInfoStrategy"/>
		<property name="commerceDeliveryModeValidationStrategy" ref="commerceDeliveryModeValidationStrategy"/>
		<property name="commercePaymentProviderStrategy" ref="commercePaymentProviderStrategy"/>
		<property name="commerceDeliveryAddressStrategy" ref="commerceDeliveryAddressStrategy"/>
		<property name="commerceDeliveryModeStrategy" ref="commerceDeliveryModeStrategy"/>
	</bean>

	<alias alias="commercePaymentInfoStrategy" name="defaultCommercePaymentInfoStrategy"/>
	<bean id="defaultCommercePaymentInfoStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommercePaymentInfoStrategy">
		<property name="commerceCartCalculationStrategy" ref="checkoutCartCalculationStrategy"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<alias alias="commerceDeliveryModeStrategy" name="defaultCommerceDeliveryModeStrategy"/>
	<bean id="defaultCommerceDeliveryModeStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceDeliveryModeStrategy">
		<property name="commerceCartCalculationStrategy" ref="checkoutCartCalculationStrategy"/>
		<property name="modelService" ref="modelService"/>
		<property name="deliveryService" ref="deliveryService"/>
	</bean>

	<alias alias="commerceDeliveryAddressStrategy" name="defaultCommerceDeliveryAddressStrategy"/>
	<bean id="defaultCommerceDeliveryAddressStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceDeliveryAddressStrategy">
		<property name="commerceCartCalculationStrategy" ref="checkoutCartCalculationStrategy"/>
		<property name="modelService" ref="modelService"/>
		<property name="commerceDeliveryModeValidationStrategy" ref="commerceDeliveryModeValidationStrategy"/>
		<property name="deliveryService" ref="deliveryService"/>
	</bean>

	<alias alias="commercePaymentProviderStrategy" name="defaultCommercePaymentProviderStrategy"/>
	<bean id="defaultCommercePaymentProviderStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommercePaymentProviderStrategy">
		<property name="baseStoreService" ref="baseStoreService"/>
	</bean>

	<alias alias="commerceDeliveryModeValidationStrategy" name="defaultCommerceDeliveryModeValidationStrategy"/>
	<bean id="defaultCommerceDeliveryModeValidationStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceDeliveryModeValidationStrategy">
		<property name="commerceCartCalculationStrategy" ref="checkoutCartCalculationStrategy"/>
		<property name="modelService" ref="modelService"/>
		<property name="deliveryService" ref="deliveryService"/>

	</bean>


	<util:list id="authorizePaymentHooks"
				  value-type="de.hybris.platform.commerceservices.order.hook.AuthorizePaymentMethodHook"/>

	<alias alias="commercePaymentAuthorizationStrategy" name="defaultPaymentAuthorizationStrategy"/>
	<bean id="defaultPaymentAuthorizationStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommercePaymentAuthorizationStrategy">
		<property name="generateMerchantTransactionCodeStrategy" ref="generateMerchantTransactionCodeStrategy"/>
		<property name="modelService" ref="modelService"/>
		<property name="i18nService" ref="i18nService"/>
		<property name="paymentService" ref="paymentService"/>
		<property name="authorizePaymentHooks" ref="authorizePaymentHooks"/>
		<property name="configurationService" ref="configurationService"/>

	</bean>


	<util:list id="commercePlaceOrderMethodHooks"
				  value-type="de.hybris.platform.commerceservices.order.hook.CommercePlaceOrderMethodHook"/>
	<alias alias="commercePlaceOrderStrategy" name="defaultCommercePlaceOrderStrategy"/>
	<bean id="defaultCommercePlaceOrderStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommercePlaceOrderStrategy">
		<property name="paymentService" ref="paymentService"/>
		<property name="modelService" ref="modelService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="deliveryService" ref="deliveryService"/>
		<property name="orderService" ref="orderService"/>
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="promotionsService" ref="promotionsService"/>
		<property name="calculationService" ref="calculationService"/>
		<property name="externalTaxesService" ref="externalTaxesService"/>
		<property name="commercePlaceOrderMethodHooks" ref="commercePlaceOrderMethodHooks"/>
		<property name="configurationService" ref="configurationService"/>
		<property name="timeService" ref="timeService" />
	</bean>

	 <alias name="defaultCommercePlaceQuoteOrderMethodHook" alias="commercePlaceQuoteOrderMethodHook"/>
    <bean id="defaultCommercePlaceQuoteOrderMethodHook" class="de.hybris.platform.commerceservices.order.hook.impl.CommercePlaceQuoteOrderMethodHook">
		<property name="eventService" ref="eventService"/>
	</bean>

    <bean id="commercePlaceQuoteOrderMethodHookMergeDirective" depends-on="commercePlaceOrderMethodHooks" parent="listMergeDirective" >
        <property name="add" ref="commercePlaceQuoteOrderMethodHook" />
    </bean>

	<alias alias="customerAccountService" name="defaultCustomerAccountService"/>
	<bean id="defaultCustomerAccountService"
			class="de.hybris.platform.commerceservices.customer.impl.DefaultCustomerAccountService">
		<property name="userService" ref="userService"/>
		<property name="paymentService" ref="paymentService"/>
		<property name="modelService" ref="modelService"/>
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
		<property name="i18nService" ref="i18nService"/>
		<property name="passwordEncoderService" ref="passwordEncoderService"/>
		<property name="secureTokenService" ref="secureTokenService"/>
		<property name="tokenValiditySeconds" value="1800"/>
		<property name="customerAccountDao" ref="customerAccountDao"/>
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="eventService" ref="eventService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="customerEmailResolutionService" ref="customerEmailResolutionService"/>
		<property name="passwordEncoding" value="#{configurationService.configuration.getProperty('default.password.encoding')}"/>
		<property name="typeService" ref="typeService"/>
		<property name="customerNameStrategy" ref="defaultCustomerNameStrategy"/>
		<property name="timeService" ref="timeService"/>
		<property name="commerceCommonI18NService" ref="commerceCommonI18NService"/>
		<property name="monthsForOrderExpiry"
					 value="#{configurationService.configuration.getProperty('guest.orderstatuspage.access.expiry.month')}"/>
		<property name="configurationService" ref="configurationService"/>
	</bean>

	<alias name="defaultCustomerAccountDao" alias="customerAccountDao"/>
	<bean id="defaultCustomerAccountDao"
			class="de.hybris.platform.commerceservices.customer.dao.impl.DefaultCustomerAccountDao"
			parent="abstractItemDao"
			>
		<property name="pagedFlexibleSearchService" ref="pagedFlexibleSearchService"/>
	</bean>

	<alias alias="customerEmailResolutionService" name="defaultCustomerEmailResolutionService"/>
	<bean id="defaultCustomerEmailResolutionService"
			class="de.hybris.platform.commerceservices.customer.impl.DefaultCustomerEmailResolutionService">
		<property name="configurationService" ref="configurationService"/>
	</bean>

	<alias alias="commerceCommonI18NService" name="defaultCommerceCommonI18NService"/>
	<bean id="defaultCommerceCommonI18NService"
			class="de.hybris.platform.commerceservices.i18n.impl.DefaultCommerceCommonI18NService">
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="i18nService" ref="i18nService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>

	<alias alias="priceService" name="netPriceService"/>
	<bean id="netPriceService" class="de.hybris.platform.commerceservices.price.impl.NetPriceService">
		<property name="netGrossStrategy" ref="netGrossStrategy"/>
		<property name="timeService" ref="timeService"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<alias alias="commercePriceService" name="defaultCommercePriceService"/>
	<bean id="defaultCommercePriceService"
			class="de.hybris.platform.commerceservices.price.impl.DefaultCommercePriceService">
		<property name="priceService" ref="priceService"/>
	</bean>

	<alias alias="commerceProductService" name="defaultCommerceProductService"/>
	<bean id="defaultCommerceProductService"
			class="de.hybris.platform.commerceservices.product.impl.DefaultCommerceProductService">
		<property name="stockService" ref="stockService"/>
		<property name="warehouseService" ref="warehouseService"/>
	</bean>

	<alias alias="commerceStockService" name="defaultCommerceStockService"/>
	<bean id="defaultCommerceStockService"
			class="de.hybris.platform.commerceservices.stock.impl.DefaultCommerceStockService">
		<property name="commerceStockLevelCalculationStrategy" ref="commerceStockLevelCalculationStrategy"/>
		<property name="stockService" ref="stockService"/>
		<property name="warehouseSelectionStrategy" ref="warehouseSelectionStrategy"/>
		<property name="storePickupDao" ref="storePickupDao"/>
		<property name="stockLevelStatusStrategy" ref="stockLevelStatusStrategy"/>
		<property name="stockLevelProductStrategy" ref="stockLevelProductID"/>
	</bean>

	<alias alias="warehouseSelectionStrategy" name="defaultWarehouseSelectionStrategy"/>
	<bean id="defaultWarehouseSelectionStrategy"
			class="de.hybris.platform.commerceservices.stock.strategies.impl.DefaultWarehouseSelectionStrategy">
		<property name="commerceWarehouseDao" ref="commerceWarehouseDao"/>
	</bean>

	<alias alias="commerceWarehouseDao" name="defaultCommerceWarehouseDao"/>
	<bean id="defaultCommerceWarehouseDao"
			class="de.hybris.platform.commerceservices.stock.dao.impl.DefaultCommerceWarehouseDao"
			parent="abstractItemDao"/>

	<alias alias="pagedFlexibleSearchService" name="defaultPagedFlexibleSearchService"/>
	<bean id="defaultPagedFlexibleSearchService"
			class="de.hybris.platform.commerceservices.search.flexiblesearch.impl.DefaultPagedFlexibleSearchService">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<alias alias="storeSessionService" name="defaultStoreSessionService"/>
	<bean id="defaultStoreSessionService"
			class="de.hybris.platform.commerceservices.storesession.impl.DefaultStoreSessionService">
		<property name="languageResolver" ref="languageResolver"/>
		<property name="commerceCommonI18NService" ref="commerceCommonI18NService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="commerceCartService" ref="commerceCartService"/>
		<property name="cartService" ref="cartService"/>
	</bean>

	<alias alias="cartFactory" name="commerceCartFactory"/>
	<bean id="commerceCartFactory" class="de.hybris.platform.commerceservices.order.impl.CommerceCartFactory">
		<property name="netGrossStrategy" ref="netGrossStrategy"/>
		<property name="keyGenerator" ref="orderCodeGenerator"/>
		<property name="modelService" ref="modelService"/>
		<property name="userService" ref="userService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="guidKeyGenerator" ref="guidKeyGenerator"/>
	</bean>

	<alias alias="createOrderFromCartStrategy" name="defaultCreateOrderFromCartStrategy"/>
	<bean id="defaultCreateOrderFromCartStrategy"
			class="de.hybris.platform.order.strategies.impl.DefaultCreateOrderFromCartStrategy">
		<property name="cartValidator" ref="cartValidator"/>
		<property name="cloneAbstractOrderStrategy" ref="cloneAbstractOrderStrategy"/>
		<property name="keyGenerator"
					 ref="#{configurationService.configuration.getProperty('commerceservices.orderCode.keyGenerator')}"/>
	</bean>

	<alias name="defaultCommerceCategoryService" alias="commerceCategoryService"/>
	<bean id="defaultCommerceCategoryService"
			class="de.hybris.platform.commerceservices.category.impl.DefaultCommerceCategoryService">
		<property name="categoryService" ref="categoryService"/>
		<property name="catalogVersionService" ref="catalogVersionService"/>
	</bean>

	<alias name="defaultImpersonationService" alias="impersonationService"/>
	<bean id="defaultImpersonationService"
			class="de.hybris.platform.commerceservices.impersonation.impl.DefaultImpersonationService">
		<property name="catalogVersionService" ref="catalogVersionService"/>
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
		<property name="i18nService" ref="commonI18NService"/>
		<property name="searchRestrictionService" ref="searchRestrictionService"/>
		<property name="sessionService" ref="sessionService"/>
		<property name="userService" ref="userService"/>
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
	</bean>

	<!-- Strategies -->
	<alias alias="netGrossStrategy" name="commerceNetGrossStrategy"/>
	<bean id="commerceNetGrossStrategy"
			class="de.hybris.platform.commerceservices.strategies.impl.CommerceNetGrossStrategy">
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="defaultNetGrossStrategy" ref="defaultNetGrossStrategy"/>
		<property name="cartService" ref="cartService"/>
	</bean>
	<bean id="defaultNetGrossStrategy"
			class="de.hybris.platform.commerceservices.strategies.impl.DefaultNetGrossStrategy"/>

	<alias alias="secureTokenService" name="defaultSecureTokenService"/>
	<bean id="defaultSecureTokenService"
			class="de.hybris.platform.commerceservices.security.impl.DefaultSecureTokenService">
		<property name="signatureKeyHex"
					 value="#{configurationService.configuration.getProperty('commerceservices.securetoken.signature-key')}"/>
		<property name="encryptionKeyHex"
					 value="#{configurationService.configuration.getProperty('commerceservices.securetoken.encryption-key')}"/>
	</bean>

	<alias alias="stockLevelStatusStrategy" name="commerceStockLevelStatusStrategy"/>
	<bean id="commerceStockLevelStatusStrategy"
			class="de.hybris.platform.commerceservices.stock.strategies.impl.CommerceStockLevelStatusStrategy">
		<property name="defaultLowStockThreshold" value="5"/>
		<property name="commerceStockLevelCalculationStrategy" ref="commerceStockLevelCalculationStrategy"/>
	</bean>

	<alias alias="commerceStockLevelCalculationStrategy" name="defaultCommerceStockLevelCalculationStrategy"/>
	<bean id="defaultCommerceStockLevelCalculationStrategy"
			class="de.hybris.platform.commerceservices.stock.strategies.impl.DefaultCommerceAvailabilityCalculationStrategy"
			/>

	<alias name="defaultDeliveryAddressesLookupStrategy" alias="deliveryAddressesLookupStrategy"/>
	<bean id="defaultDeliveryAddressesLookupStrategy"
			class="de.hybris.platform.commerceservices.strategies.impl.DefaultDeliveryAddressesLookupStrategy"
			>
		<property name="customerAccountService" ref="customerAccountService"/>
		<property name="checkoutCustomerStrategy" ref="checkoutCustomerStrategy"/>
	</bean>

	<alias name="defaultDeliveryModeLookupStrategy" alias="deliveryModeLookupStrategy"/>
	<bean id="defaultDeliveryModeLookupStrategy"
			class="de.hybris.platform.commerceservices.strategies.impl.DefaultDeliveryModeLookupStrategy">
		<property name="countryZoneDeliveryModeDao" ref="countryZoneDeliveryModeDao"/>
		<property name="pickupDeliveryModeDao" ref="pickupDeliveryModeDao"/>
	</bean>

	<alias name="defaultCartValidationStrategy" alias="cartValidationStrategy"/>
	<bean id="defaultCartValidationStrategy"
			class="de.hybris.platform.commerceservices.strategies.impl.DefaultCartValidationStrategy">
		<property name="modelService" ref="modelService"/>
		<property name="cartService" ref="cartService"/>
		<property name="productService" ref="productService"/>
		<property name="commerceStockService" ref="commerceStockService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="userService" ref="userService"/>
		<property name="configurationService" ref="configurationService"/>
		<property name="cartValidationHooks" ref="cartValidationHooks"/>
	</bean>

	<alias name="defaultCartValidationHooks" alias="cartValidationHooks" />
	<util:list id="defaultCartValidationHooks" value-type="de.hybris.platform.commerceservices.strategies.hooks.CartValidationHook"/>

	<alias name="defaultCartValidationWithoutCartAlteringStrategy" alias="cartValidationWithoutCartAlteringStrategy"/>
	<bean id="defaultCartValidationWithoutCartAlteringStrategy"
			class="de.hybris.platform.commerceservices.strategies.impl.CartValidationWithoutCartAlteringStrategy">
		<property name="productService" ref="productService"/>
		<property name="commerceStockService" ref="commerceStockService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
	</bean>

	<alias name="defaultGenerateMerchantTransactionCodeStrategy" alias="generateMerchantTransactionCodeStrategy"/>
	<bean id="defaultGenerateMerchantTransactionCodeStrategy"
			class="de.hybris.platform.commerceservices.strategies.impl.DefaultGenerateMerchantTransactionCodeStrategy"/>

	<alias alias="checkoutCustomerStrategy" name="defaultCheckoutCustomerStrategy"/>
	<bean id="defaultCheckoutCustomerStrategy"
			class="de.hybris.platform.commerceservices.strategies.impl.DefaultCheckoutCustomerStrategy">
		<property name="userService" ref="userService"/>
		<property name="cartService" ref="cartService"/>
	</bean>

	<alias name="defaultQuoteStateSelectionStrategy" alias="quoteStateSelectionStrategy" />
	<bean id="defaultQuoteStateSelectionStrategy"
		  class="de.hybris.platform.commerceservices.order.strategies.impl.DefaultQuoteStateSelectionStrategy">
		<property name="userTypeActionStateMap" ref="quoteUserTypeActionStateMap"/>
		<property name="userTypeActionStateTransitionMap" ref="quoteUserTypeActionStateTransitionMap"/>
		<property name="quoteUserTypeIdentificationStrategy" ref="quoteUserTypeIdentificationStrategy"/>
	</bean>

	<alias name="defaultQuoteActionValidationStrategy" alias="quoteActionValidationStrategy" />
	<bean id="defaultQuoteActionValidationStrategy"
		  class="de.hybris.platform.commerceservices.order.strategies.impl.DefaultQuoteActionValidationStrategy">
		<property name="quoteStateSelectionStrategy" ref="quoteStateSelectionStrategy"/>
	</bean>

	<alias name="defaultQuoteCartValidationStrategy" alias="quoteCartValidationStrategy" />
	<bean id="defaultQuoteCartValidationStrategy"
		  class="de.hybris.platform.commerceservices.order.strategies.impl.DefaultQuoteCartValidationStrategy">
	</bean>

	<alias name="defaultQuoteUpdateStateStrategy" alias="quoteUpdateStateStrategy" />
	<bean id="defaultQuoteUpdateStateStrategy"
		  class="de.hybris.platform.commerceservices.order.strategies.impl.DefaultQuoteUpdateStateStrategy">
		<property name="quoteStateSelectionStrategy" ref="quoteStateSelectionStrategy"/>
	</bean>

	<alias name="defaultQuoteUserTypeIdentificationStrategy" alias="quoteUserTypeIdentificationStrategy" />
	<bean id="defaultQuoteUserTypeIdentificationStrategy"
		  class="de.hybris.platform.commerceservices.order.strategies.impl.DefaultQuoteUserTypeIdentificationStrategy">
		<property name="userService" ref="userService"/>
		<property name="buyerGroup" value="${commerceservices.quote.buyer.usergroup.uid}" />
		<property name="sellerGroup" value="${commerceservices.quote.seller.usergroup.uid}" />
		<property name="sellerApproverGroup" value="${commerceservices.quote.seller.approver.usergroup.uid}" />
	</bean>

	<alias name="defaultQuoteUserIdentificationStrategy" alias="quoteUserIdentificationStrategy" />
	<bean id="defaultQuoteUserIdentificationStrategy"
		  class="de.hybris.platform.commerceservices.order.strategies.impl.DefaultQuoteUserIdentificationStrategy">
		<property name="userService" ref="userService"/>
	</bean>

	<alias name="defaultQuoteSellerApproverAutoApprovalStrategy" alias="quoteSellerApproverAutoApprovalStrategy" />
	<bean id="defaultQuoteSellerApproverAutoApprovalStrategy"
		  class="de.hybris.platform.commerceservices.order.strategies.impl.DefaultQuoteSellerApproverAutoApprovalStrategy">
		<property name="configurationService" ref="configurationService"/>
	</bean>

	<alias name="defaultQuoteUpdateExpirationTimeStrategy" alias="quoteUpdateExpirationTimeStrategy" />
	<bean id="defaultQuoteUpdateExpirationTimeStrategy"
		  class="de.hybris.platform.commerceservices.order.strategies.impl.DefaultQuoteUpdateExpirationTimeStrategy">
		<property name="quoteUserTypeIdentificationStrategy" ref="quoteUserTypeIdentificationStrategy"/>
		<property name="timeService" ref="timeService"/>
	</bean>

	<alias name="defaultQuoteMetadataValidationStrategy" alias="quoteMetadataValidationStrategy" />
	<bean id="defaultQuoteMetadataValidationStrategy"
		  class="de.hybris.platform.commerceservices.order.strategies.impl.DefaultQuoteMetadataValidationStrategy">
		<property name="quoteUserTypeIdentificationStrategy" ref="quoteUserTypeIdentificationStrategy"/>
	</bean>

	<alias name="defaultRequoteStrategy" alias="requoteStrategy" />
	<bean id="defaultRequoteStrategy"
		  class="de.hybris.platform.commerceservices.order.impl.DefaultRequoteStrategy" parent="genericAbstractOrderCloningStrategy">
		<property name="commerceQuoteUtils" ref="commerceQuoteUtils"/>
		<property name="quoteUpdateStateStrategy" ref="quoteUpdateStateStrategy"/>
	</bean>

	<alias name="defaultThreadContextService" alias="threadContextService"/>
	<bean id="defaultThreadContextService"
			class="de.hybris.platform.commerceservices.threadcontext.impl.DefaultThreadContextService"/>

	<!-- UrlResolvers -->

	<alias name="defaultCategoryModelUrlResolver" alias="categoryModelUrlResolver"/>
	<bean id="defaultCategoryModelUrlResolver"
			class="de.hybris.platform.commerceservices.url.impl.DefaultCategoryModelUrlResolver">
		<property name="threadContextService" ref="threadContextService"/>
		<property name="commerceCategoryService" ref="commerceCategoryService"/>
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="pattern" value="/{category-path}/c/{category-code}"/>
	</bean>

	<alias name="defaultProductModelUrlResolver" alias="productModelUrlResolver"/>
	<bean id="defaultProductModelUrlResolver"
			class="de.hybris.platform.commerceservices.url.impl.DefaultProductModelUrlResolver">
		<property name="threadContextService" ref="threadContextService"/>
		<property name="commerceCategoryService" ref="commerceCategoryService"/>
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="defaultPattern" value="/{category-path}/{product-name}/p/{product-code}"/>
	</bean>

	<alias name="defaultPointOfServiceUrlResolver" alias="pointOfServiceUrlResolver"/>
	<bean id="defaultPointOfServiceUrlResolver"
			class="de.hybris.platform.commerceservices.url.impl.DefaultPointOfServiceUrlResolver">
		<property name="threadContextService" ref="threadContextService"/>
		<property name="pattern" value="/store/{store-name}?lat={latitude}&amp;long={longitude}"/>
	</bean>

	<alias name="defaulCustomPageUrlResolver" alias="customPageUrlResolver"/>
	<bean id="defaulCustomPageUrlResolver"
			class="de.hybris.platform.commerceservices.url.impl.DefaulCustomPageUrlResolver">
		<property name="threadContextService" ref="threadContextService"/>
		<property name="pattern" value=""/>
	</bean>

	<!-- customer original ID -->
	<bean id="originalUidUserDetailsService"
			class="de.hybris.platform.commerceservices.spring.security.OriginalUidUserDetailsService"/>

	<!-- Remove credit card validation interceptor -->
	<bean class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="VoidInterceptor"/>
		<property name="typeCode" value="CreditCardPaymentInfo"/>
		<property name="replacedInterceptors" ref="creditCardPaymentInfoValidator"/>
	</bean>

	<bean id="customerOriginalUIDPrepareInterceptor"
			class="de.hybris.platform.commerceservices.customer.impl.CustomerOriginalUidPrepareInterceptor"/>

	<bean id="customerOriginalUIDPrepareMapping"
			class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="customerOriginalUIDPrepareInterceptor"/>
		<property name="typeCode" value="customer"/>
		<!-- property name="replacedInterceptors" ref="MandatoryAttributesValidator"/ -->
	</bean>

	<alias alias="exportProductService" name="defaultExportProductService"/>
	<bean id="defaultExportProductService"
			class="de.hybris.platform.commerceservices.product.impl.DefaultExportProductService">
		<property name="pagedFlexibleSearchService" ref="pagedFlexibleSearchService"/>
	</bean>

	<!-- Product References -->
	<alias name="defaultCommerceProductReferenceService" alias="commerceProductReferenceService"/>
	<bean id="defaultCommerceProductReferenceService"
			class="de.hybris.platform.commerceservices.product.impl.DefaultCommerceProductReferenceService">
		<property name="modelService" ref="modelService"/>
		<property name="productService" ref="productService"/>
		<property name="productReferenceTargetStrategies">
			<map key-type="de.hybris.platform.catalog.enums.ProductReferenceTypeEnum">
				<!-- Add a strategy for a specific reference type -->
				<!-- <entry key="SIMILAR" value-ref="..."/> -->
			</map>
		</property>
		<property name="defaultProductReferenceTargetStrategy" ref="crossSellingProductReferenceTargetStrategy"/>
	</bean>

	<alias name="defaultCrossSellingProductReferenceTargetStrategy" alias="crossSellingProductReferenceTargetStrategy"/>
	<bean id="defaultCrossSellingProductReferenceTargetStrategy"
			class="de.hybris.platform.commerceservices.strategies.impl.ChainProductReferenceTargetStrategy">
		<property name="productReferenceTargetStrategies">
			<list>
				<ref bean="loneLeafVariantProductReferenceTargetStrategy"/>
			</list>
		</property>
	</bean>

	<alias name="defaultLoneLeafVariantProductReferenceTargetStrategy"
			 alias="loneLeafVariantProductReferenceTargetStrategy"/>
	<bean id="defaultLoneLeafVariantProductReferenceTargetStrategy"
			class="de.hybris.platform.commerceservices.strategies.impl.LoneLeafVariantProductReferenceTargetStrategy"/>

	<!-- Storefinder -->
	<alias name="defaultStoreFinderService" alias="storeFinderService"/>
	<bean id="defaultStoreFinderService"
			class="de.hybris.platform.commerceservices.storefinder.impl.DefaultStoreFinderService">
		<property name="pointOfServiceDao" ref="pointOfServiceDao"/>
		<property name="geoWebServiceWrapper" ref="geoServiceWrapper"/>
		<!-- <property name="siteConfigService" ref="siteConfigService"/> -->
		<property name="pointOfServicePagedGenericDao" ref="pointOfServicePagedGenericDao"/>
		<property name="pointOfServiceGenericDao" ref="pointOfServiceGenericDao"/>
	</bean>

	<alias name="defaultPointOfServiceGenericDao" alias="pointOfServiceGenericDao"/>
	<bean name="defaultPointOfServiceGenericDao" class="de.hybris.platform.servicelayer.internal.dao.DefaultGenericDao">
		<constructor-arg value="PointOfService"/>
	</bean>

	<alias name="defaultPointOfServicePagedGenericDao" alias="pointOfServicePagedGenericDao"/>
	<bean name="defaultPointOfServicePagedGenericDao"
			class="de.hybris.platform.commerceservices.search.dao.impl.DefaultPagedGenericDao">
		<constructor-arg value="PointOfService"/>
		<property name="pagedFlexibleSearchService" ref="pagedFlexibleSearchService"/>
	</bean>

	<alias name="defaultCustomerNameStrategy" alias="customerNameStrategy"/>
	<bean id="defaultCustomerNameStrategy"
			class="de.hybris.platform.commerceservices.strategies.impl.DefaultCustomerNameStrategy"/>

	<!-- External Taxes -->

	<alias name="defaultDecideExternalTaxesStrategy" alias="decideExternalTaxesStrategy"/>
	<bean id="defaultDecideExternalTaxesStrategy"
			class="de.hybris.platform.commerceservices.externaltax.impl.DefaultDecideExternalTaxesStrategy"/>

	<alias name="defaultApplyExternalTaxesStrategy" alias="applyExternalTaxesStrategy"/>
	<bean id="defaultApplyExternalTaxesStrategy"
			class="de.hybris.platform.externaltax.impl.DefaultApplyExternalTaxesStrategy"/>

	<alias name="defaultCalculateExternalTaxesStrategy" alias="calculateExternalTaxesStrategy"/>
	<bean id="defaultCalculateExternalTaxesStrategy"
			class="de.hybris.platform.commerceservices.externaltax.impl.DefaultCalculateExternalTaxesStrategy"/>

	<alias name="defaultCalculateExternalTaxesFallbackStrategy" alias="calculateExternalTaxesFallbackStrategy"/>
	<bean id="defaultCalculateExternalTaxesFallbackStrategy"
			class="de.hybris.platform.commerceservices.externaltax.impl.DefaultCalculateExternalTaxesFallbackStrategy"/>

	<alias name="defaultRecalculateExternalTaxesStrategy" alias="recalculateExternalTaxesStrategy"/>
	<bean id="defaultRecalculateExternalTaxesStrategy"
			class="de.hybris.platform.commerceservices.externaltax.impl.DefaultRecalculateExternalTaxesStrategy">
		<property name="modelService" ref="modelService"/>
		<property name="commerceCartHashCalculationStrategy" ref="commerceCartHashCalculationStrategy"/>
		<property name="sessionService" ref="sessionService"/>
	</bean>

	<alias name="defaultDeliveryFromAddressStrategy" alias="estimatedDeliveryFromAddressStrategy"/>
	<alias name="defaultDeliveryFromAddressStrategy" alias="deliveryFromAddressStrategy"/>
	<bean id="defaultDeliveryFromAddressStrategy"
			class="de.hybris.platform.commerceservices.externaltax.impl.DefaultDeliveryFromAddressStrategy">
		<property name="baseStoreService" ref="baseStoreService"/>
	</bean>

	<alias name="defaultTaxAreaLookupStrategy" alias="taxAreaLookupStrategy"/>
	<bean id="defaultTaxAreaLookupStrategy"
			class="de.hybris.platform.commerceservices.externaltax.impl.DefaultTaxAreaLookupStrategy"/>

	<alias name="defaultTaxCodeStrategy" alias="taxCodeStrategy"/>
	<bean id="defaultTaxCodeStrategy"
			class="de.hybris.platform.commerceservices.externaltax.impl.DefaultTaxCodeStrategy">
		<property name="productTaxCodeService" ref="productTaxCodeService"/>
		<property name="taxAreaLookupStrategy" ref="taxAreaLookupStrategy"/>
		<property name="productService" ref="productService"/>
		<property name="catalogVersionService" ref="catalogVersionService"/>
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="configurationService" ref="configurationService"/>
	</bean>

	<alias name="defaultExternalTaxesService" alias="externalTaxesService"/>
	<bean id="defaultExternalTaxesService"
			class="de.hybris.platform.commerceservices.externaltax.impl.DefaultExternalTaxesService">
		<property name="calculateExternalTaxesStrategy" ref="calculateExternalTaxesStrategy"/>
		<property name="applyExternalTaxesStrategy" ref="applyExternalTaxesStrategy"/>
		<property name="decideExternalTaxesStrategy" ref="decideExternalTaxesStrategy"/>
		<property name="recalculateExternalTaxesStrategy" ref="recalculateExternalTaxesStrategy"/>
		<property name="modelService" ref="modelService"/>
		<property name="sessionService" ref="sessionService"/>
	</bean>

	<!-- External Taxes END -->

	<!-- Helpers -->

	<alias name="defaultDistanceHelper" alias="distanceHelper"/>
	<bean id="defaultDistanceHelper"
			class="de.hybris.platform.commerceservices.storefinder.helpers.impl.DefaultDistanceHelper">
		<property name="pointOfServiceService" ref="pointOfServiceService"/>
		<property name="enumerationService" ref="enumerationService"/>
	</bean>

	<!-- Helpers END-->

	<!-- Prototype Beans for Data POJOs -->
	<bean id="referenceData" class="de.hybris.platform.commerceservices.product.data.ReferenceData" scope="prototype"/>
	<bean id="pageableData" class="de.hybris.platform.commerceservices.search.pagedata.PageableData" scope="prototype"/>
	<bean id="paginationData" class="de.hybris.platform.commerceservices.search.pagedata.PaginationData"
			scope="prototype"/>
	<bean id="searchPageData" class="de.hybris.platform.commerceservices.search.pagedata.SearchPageData"
			scope="prototype"/>
	<bean id="sortData" class="de.hybris.platform.commerceservices.search.pagedata.SortData" scope="prototype"/>
	<bean id="breadcrumbData" class="de.hybris.platform.commerceservices.search.facetdata.BreadcrumbData"
			scope="prototype"/>
	<bean id="facetData" class="de.hybris.platform.commerceservices.search.facetdata.FacetData" scope="prototype"/>
	<bean id="facetRefinement" class="de.hybris.platform.commerceservices.search.facetdata.FacetRefinement"
			scope="prototype"/>
	<bean id="facetSearchPageData" class="de.hybris.platform.commerceservices.search.facetdata.FacetSearchPageData"
			scope="prototype"/>
	<bean id="facetValueData" class="de.hybris.platform.commerceservices.search.facetdata.FacetValueData"
			scope="prototype"/>
	<bean id="productCategorySearchPageData"
			class="de.hybris.platform.commerceservices.search.facetdata.ProductCategorySearchPageData" scope="prototype"/>
	<bean id="productSearchPageData" class="de.hybris.platform.commerceservices.search.facetdata.ProductSearchPageData"
			scope="prototype"/>
	<bean id="spellingSuggestionData" class="de.hybris.platform.commerceservices.search.facetdata.SpellingSuggestionData"
			scope="prototype"/>
	<bean id="sortQueryData" class="de.hybris.platform.commerceservices.search.flexiblesearch.data.SortQueryData"
			scope="prototype"/>
	<bean id="searchResultValueData" class="de.hybris.platform.commerceservices.search.resultdata.SearchResultValueData"
			scope="prototype"/>
	<bean id="storeFinderSearchPageData"
			class="de.hybris.platform.commerceservices.storefinder.data.StoreFinderSearchPageData"
			scope="prototype"/>
	<bean id="pointOfServiceDistanceData"
			class="de.hybris.platform.commerceservices.storefinder.data.PointOfServiceDistanceData"
			scope="prototype"/>

	<!-- Cart Restoration -->
	<bean id="jalosession" class="de.hybris.platform.jalo.JaloSessionFactory">
		<property name="targetClassName" value="de.hybris.platform.commerceservices.jalo.CommerceJaloSession"/>
	</bean>

	<!-- Promotions  -->
	<alias alias="commercePromotionDao" name="defaultCommercePromotionDao"/>
	<bean id="defaultCommercePromotionDao"
			class="de.hybris.platform.commerceservices.promotion.dao.impl.DefaultCommercePromotionDao"
			parent="abstractItemDao"/>

	<alias alias="commercePromotionService" name="defaultCommercePromotionService"/>
	<bean id="defaultCommercePromotionService"
			class="de.hybris.platform.commerceservices.promotion.impl.DefaultCommercePromotionService">
		<property name="commercePromotionDao" ref="commercePromotionDao"/>
	</bean>

	<alias alias="commercePromotionRestrictionDao" name="defaultCommercePromotionRestrictionDao"/>
	<bean id="defaultCommercePromotionRestrictionDao"
			class="de.hybris.platform.commerceservices.promotion.dao.impl.DefaultCommercePromotionRestrictionDao"
			parent="abstractItemDao"/>

	<alias alias="commercePromotionRestrictionService" name="defaultCommercePromotionRestrictionService"/>
	<bean id="defaultCommercePromotionRestrictionService"
			class="de.hybris.platform.commerceservices.promotion.impl.DefaultCommercePromotionRestrictionService">
		<property name="commercePromotionRestrictionDao" ref="commercePromotionRestrictionDao"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<alias name="defaultCommercePromotionGroupStrategy" alias="promotionGroupStrategy" />
	<bean id="defaultCommercePromotionGroupStrategy"
		class="de.hybris.platform.commerceservices.promotion.impl.DefaultCommercePromotionGroupStrategy"
		parent="defaultPromotionGroupStrategy">
	</bean>

	<!-- Base system setup bean -->
	<bean id="abstractCoreSystemSetup"
			class="de.hybris.platform.commerceservices.setup.AbstractSystemSetup"
			abstract="true">
		<property name="setupImpexService" ref="setupImpexService"/>
		<property name="setupSyncJobService" ref="setupSyncJobService"/>
		<property name="setupSolrIndexerService" ref="setupSolrIndexerService"/>
		<property name="catalogVersionService" ref="catalogVersionService"/>
		<property name="eventService" ref="eventService"/>
	</bean>

	<!-- Helper setup services used by the system setup bean -->

	<alias name="defaultSetupImpexService" alias="setupImpexService"/>
	<bean id="defaultSetupImpexService"
			class="de.hybris.platform.commerceservices.setup.impl.DefaultSetupImpexService">
		<property name="importService" ref="defaultImportService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>

	<!-- Define Import Services -->

	<alias name="defaultAbstractDataImportService" alias="abstractDataImportService"/>
	<bean id="defaultAbstractDataImportService"
			class="de.hybris.platform.commerceservices.dataimport.AbstractDataImportService"
			abstract="true">
		<property name="setupImpexService" ref="setupImpexService"/>
		<property name="setupSyncJobService" ref="setupSyncJobService"/>
		<property name="setupSolrIndexerService" ref="setupSolrIndexerService"/>
		<property name="catalogVersionService" ref="catalogVersionService"/>
		<property name="eventService" ref="eventService"/>
		<property name="configurationService" ref="configurationService"/>
	</bean>

	<alias name="defaultCoreDataImportService" alias="coreDataImportService"/>
	<bean id="defaultCoreDataImportService"
			class="de.hybris.platform.commerceservices.dataimport.impl.CoreDataImportService"
			parent="abstractDataImportService"/>

	<alias name="defaultSampleDataImportService" alias="sampleDataImportService"/>
	<bean id="defaultSampleDataImportService"
			class="de.hybris.platform.commerceservices.dataimport.impl.SampleDataImportService"
			parent="abstractDataImportService"/>

	<util:list id="contentCatalogSyncRootTypeCodes">
		<value>CMSItem</value>
		<value>CMSRelation</value>
		<value>Media</value>
		<value>MediaContainer</value>
	</util:list>

	<util:list id="productCatalogSyncRootTypeCodes">
       	<value>AbstractConfiguratorSetting</value>
   	</util:list>

	<util:map id="contentCatalogEditSyncDescriptors" key-type="java.lang.Class" value-type="java.util.List"/>

	<util:map id="productCatalogEditSyncDescriptors" key-type="java.lang.Class" value-type="java.util.List">
		<entry key="de.hybris.platform.jalo.Item">
			<list>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="comments"/>
				</bean>
			</list>
		</entry>
		<entry key="de.hybris.platform.jalo.product.Product">
			<list>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="sequenceId"/>
				</bean>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="productReviews"/>
				</bean>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="restrictions"/>
				</bean>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="productCarouselComponents"/>
				</bean>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="productListComponents"/>
				</bean>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="productDetailComponents"/>
				</bean>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="productFeatureComponents"/>
				</bean>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="copyByValue" value="true"/>
					<property name="qualifier" value="galleryImages"/>
				</bean>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="promotions"/>
				</bean>
			</list>
		</entry>

		<entry key="de.hybris.platform.europe1.jalo.PriceRow">
			<list>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="sequenceId"/>
				</bean>
			</list>
		</entry>

		<entry key="de.hybris.platform.category.jalo.Category">
			<list>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="linkcomponents"/>
				</bean>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="productCarouselComponents"/>
				</bean>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="restrictions"/>
				</bean>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="productListComponents"/>
				</bean>
				<bean class="de.hybris.platform.commerceservices.setup.data.EditSyncAttributeDescriptorData">
					<property name="includeInSync" value="false"/>
					<property name="qualifier" value="categoryFeatureComponents"/>
				</bean>
			</list>
		</entry>
	</util:map>

	<alias name="defaultSetupSyncJobService" alias="setupSyncJobService"/>
	<bean id="defaultSetupSyncJobService"
			class="de.hybris.platform.commerceservices.setup.impl.DefaultSetupSyncJobService">
		<property name="modelService" ref="modelService"/>
		<property name="contentCatalogRootTypeCodes" ref="contentCatalogSyncRootTypeCodes"/>
		<property name="productCatalogRootTypeCodes" ref="productCatalogSyncRootTypeCodes"/>
		<property name="contentCatalogEditSyncDescriptors" ref="contentCatalogEditSyncDescriptors"/>
		<property name="productCatalogEditSyncDescriptors" ref="productCatalogEditSyncDescriptors"/>
		<property name="catalogVersionService" ref="catalogVersionService"/>
	</bean>

	<bean id="impexMacroParameterData" class="de.hybris.platform.commerceservices.setup.data.ImpexMacroParameterData"
			scope="prototype"/>

	<alias name="defaultStaleCartRemovalStrategy" alias="staleCartRemovalStrategy"/>
	<bean id="defaultStaleCartRemovalStrategy"
			class="de.hybris.platform.commerceservices.strategies.impl.DefaultStaleCartRemovalStrategy">
		<property name="modelService" ref="modelService"/>
		<property name="commerceCartDao" ref="commerceCartDao"/>
	</bean>

	<bean id="commerceCartParameter" class="de.hybris.platform.commerceservices.service.data.CommerceCartParameter"
			scope="prototype">
		<property name="enableHooks" value="true"/>
	</bean>

	<util:list id="commerceSaveCartMethodHooks"
				  value-type="de.hybris.platform.commerceservices.order.hook.CommerceSaveCartMethodHook"/>


	<alias name="defaultAbstractCommerceSaveCartStrategy" alias="abstractCommerceSaveCartStrategy"/>
	<bean name="defaultAbstractCommerceSaveCartStrategy"
			class="de.hybris.platform.commerceservices.order.impl.AbstractCommerceSaveCartStrategy" abstract="true"
			parent="abstractCommerceCartStrategy">
		<property name="commerceSaveCartMethodHooks" ref="commerceSaveCartMethodHooks"/>
		<property name="configurationService" ref="configurationService"/>
		<property name="userService" ref="userService"/>
	</bean>

	<alias name="defaultCommerceSaveCartStrategy" alias="commerceSaveCartStrategy"/>
	<bean id="defaultCommerceSaveCartStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceSaveCartStrategy"
			parent="abstractCommerceSaveCartStrategy">
		<property name="userService" ref="userService"/>
		<property name="timeService" ref="timeService"/>
	</bean>

	<util:list id="commerceSaveCartRestorationMethodHooks"
				  value-type="de.hybris.platform.commerceservices.order.hook.CommerceSaveCartRestorationMethodHook"/>

	<alias name="defaultCommerceSaveCartRestorationStrategy" alias="commerceSaveCartRestorationStrategy"/>
	<bean id="defaultCommerceSaveCartRestorationStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceSaveCartRestorationStrategy"
			parent="commerceCartRestorationStrategy">
		<property name="commerceSaveCartRestorationMethodHooks" ref="commerceSaveCartRestorationMethodHooks"/>
		<property name="configurationService" ref="configurationService"/>
	</bean>

	<util:list id="commerceCloneSavedCartMethodHooks"
				  value-type="de.hybris.platform.commerceservices.order.hook.CommerceCloneSavedCartMethodHook"/>

	<alias name="defaultAbstractCommerceCloneSavedCartStrategy" alias="abstractCommerceCloneSavedCartStrategy"/>
	<bean name="defaultAbstractCommerceCloneSavedCartStrategy"
          class="de.hybris.platform.commerceservices.order.impl.AbstractCommerceCloneSavedCartStrategy" abstract="true"
          parent="abstractCommerceCartStrategy">
		<property name="commerceCloneSavedCartMethodHooks" ref="commerceCloneSavedCartMethodHooks"/>
		<property name="configurationService" ref="configurationService"/>
	</bean>

	<alias name="defaultCommerceCloneSavedCartStrategy" alias="commerceCloneSavedCartStrategy"/>
	<bean id="defaultCommerceCloneSavedCartStrategy"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceCloneSavedCartStrategy"
			parent="abstractCommerceCloneSavedCartStrategy">
	</bean>

	<alias alias="commerceSaveCartService" name="defaultCommerceSaveCartService"/>
	<bean id="defaultCommerceSaveCartService"
			class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceSaveCartService">
		<property name="commerceSaveCartStrategy" ref="commerceSaveCartStrategy"/>
        <property name="commerceFlagForDeletionStrategy" ref="commerceFlagForDeletionStrategy"/>
		<property name="commerceSaveCartRestorationStrategy" ref="commerceSaveCartRestorationStrategy"/>
		<property name="commerceCloneSavedCartStrategy" ref="commerceCloneSavedCartStrategy"/>
		<property name="saveCartDao" ref="saveCartDao"/>
		<property name="userService" ref="userService"/>
	</bean>

	<bean id="commerceSaveCartParameter" class="de.hybris.platform.commerceservices.service.data.CommerceSaveCartParameter"
			scope="prototype">
		<property name="enableHooks" value="true"/>
	</bean>

	<alias name="defaultCommerceSaveCartTextGenerationStrategy" alias="commerceSaveCartTextGenerationStrategy"/>
	<bean id="defaultCommerceSaveCartTextGenerationStrategy" class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceSaveCartTextGenerationStrategy"/>

   <util:list id="commerceFlagForDeletionMethodHooks"
               value-type="de.hybris.platform.commerceservices.order.hook.CommerceFlagForDeletionMethodHook"/>

    <alias name="defaultAbstractCommerceFlagForDeletionStrategy" alias="abstractCommerceFlagForDeletionStrategy"/>
    <bean name="defaultAbstractCommerceFlagForDeletionStrategy"
          class="de.hybris.platform.commerceservices.order.impl.AbstractCommerceFlagForDeletionStrategy" abstract="true"
          parent="abstractCommerceCartStrategy">
        <property name="commerceFlagForDeletionMethodHooks" ref="commerceFlagForDeletionMethodHooks"/>
        <property name="configurationService" ref="configurationService"/>
    </bean>

    <alias name="defaultCommerceFlagForDeletionStrategy" alias="commerceFlagForDeletionStrategy"/>
    <bean id="defaultCommerceFlagForDeletionStrategy"
          class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceFlagForDeletionStrategy"
          parent="abstractCommerceFlagForDeletionStrategy">
    </bean>

	<!-- Organizational Units -->

	<alias name="defaultOrgUnitService" alias="orgUnitService"/>
	<bean id="defaultOrgUnitService" class="de.hybris.platform.commerceservices.organization.services.impl.DefaultOrgUnitService">
		<property name="modelService" ref ="modelService"/>
		<property name="userService" ref ="userService"/>
		<property name="flexibleSearchService" ref ="flexibleSearchService"/>
		<property name="orgUnitActivationStrategy" ref ="orgUnitActivationStrategy"/>
		<property name="orgUnitDao" ref ="orgUnitDao"/>
		<property name="orgUnitAuthorizationStrategy" ref ="orgUnitAuthorizationStrategy"/>
		<property name="orgUnitHierarchyService" ref="orgUnitHierarchyService"/>
		<property name="configurationService" ref="configurationService"/>
	</bean>

	<alias name="defaultOrgUnitHierarchyService" alias="orgUnitHierarchyService"/>
	<bean id="defaultOrgUnitHierarchyService" class="de.hybris.platform.commerceservices.organization.services.impl.DefaultOrgUnitHierarchyService">
		<property name="orgUnitDao" ref ="orgUnitDao"/>
		<property name="sessionService" ref ="sessionService"/>
		<property name="modelService" ref ="modelService"/>
	</bean>

    <!-- Provide a job that can be triggered manually or scheduled to generate the paths for all OrgUnitModels -->
    <bean id="generateOrgUnitPathsJob" class="de.hybris.platform.commerceservices.organization.cronjob.GenerateOrgUnitPathsJob" parent="abstractJobPerformable">
    	<constructor-arg type="java.lang.Class" value="de.hybris.platform.commerceservices.model.OrgUnitModel"></constructor-arg>
		<property name="orgUnitHierarchyService" ref="orgUnitHierarchyService" />
		<property name="configurationService" ref="configurationService"/>
    </bean>

	<!-- Listen for AfterInitializationEndEvent to create the paths for all OrgUnitModels -->
	<bean id="orgUnitAfterInitializationEndEventListener" class="de.hybris.platform.commerceservices.organization.listeners.impl.OrgUnitAfterInitializationEndEventListener" parent="abstractEventListener">
		<constructor-arg type="java.lang.Class" value="de.hybris.platform.commerceservices.model.OrgUnitModel"></constructor-arg>
		<property name="orgUnitHierarchyService" ref="orgUnitHierarchyService"/>
		<property name="configurationService" ref="configurationService"/>
	</bean>

	<alias name="defaultOrgUnitQuoteService" alias="orgUnitQuoteService"/>
	<bean id="defaultOrgUnitQuoteService" class="de.hybris.platform.commerceservices.organization.services.impl.DefaultOrgUnitQuoteService">
		<property name="orgUnitDao" ref ="orgUnitDao"/>
		<property name="quoteStateSelectionStrategy" ref="quoteStateSelectionStrategy"/>
		<property name="orgUnitAuthorizationStrategy" ref ="orgUnitAuthorizationStrategy"/>
	</bean>

	<alias name="defaultOrgUnitDao" alias="orgUnitDao"/>
	<bean id="defaultOrgUnitDao" class="de.hybris.platform.commerceservices.organization.daos.impl.DefaultOrgUnitDao">
		<constructor-arg value="OrgUnit"/>
		<property name="pagedFlexibleSearchService" ref="pagedFlexibleSearchService"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<alias name="defaultOrgUnitActivationStrategy" alias="orgUnitActivationStrategy"/>
	<bean id="defaultOrgUnitActivationStrategy" class="de.hybris.platform.commerceservices.organization.strategies.impl.DefaultOrgUnitActivationStrategy">
		<property name="orgUnitDao" ref="orgUnitDao"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<alias name="defaultOrgUnitAuthorizationStrategy" alias="orgUnitAuthorizationStrategy"/>
	<bean id="defaultOrgUnitAuthorizationStrategy" class="de.hybris.platform.commerceservices.organization.strategies.impl.DefaultOrgUnitAuthorizationStrategy">
		<property name="userService" ref ="userService"/>
	</bean>

    <alias name="defaultCustomerListService" alias="customerListService"/>
    <bean id="defaultCustomerListService" class="de.hybris.platform.commerceservices.customer.impl.DefaultCustomerListService">
          <property name="userService" ref="userService"/>
    </bean>

	<!-- A map that will hold different types of customer list implementations, the key is the implementation type string and the
	value is the actual implementation bean , this map would be populated by modules interested in contributing to this feature.
	 -->
	<util:map id="customerListSearchStrategyMap" key-type="java.lang.String"
				  value-type="de.hybris.platform.commerceservices.customer.strategies.CustomerListSearchStrategy"/>

	<alias name="defaultCustomerListSearchService" alias="customerListSearchService"/>
	<bean id="defaultCustomerListSearchService"
			class="de.hybris.platform.commerceservices.customer.impl.DefaultCustomerListSearchService">
		<property name="customerListService" ref="customerListService"/>
		<property name="customerListSearchStrategyMap" ref="customerListSearchStrategyMap"/>
	</bean>

	<bean id="orgUnitModelValidateInterceptor" class="de.hybris.platform.commerceservices.organization.interceptor.OrgUnitModelValidateInterceptor">
		<property name="orgUnitService" ref="orgUnitService"/>
		<property name="userService" ref="userService"/>
		<property name="l10NService" ref="l10nService"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<bean id="orgUnitModelValidateInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="orgUnitModelValidateInterceptor"/>
		<property name="typeCode" value="OrgUnit"/>
	</bean>

	<util:list id="commerceRemoveEntryGroupMethodHooks" value-type="de.hybris.platform.commerceservices.order.hook.CommerceRemoveEntryGroupMethodHook"/>

	<alias alias="removeEntryGroupStrategy" name="defaultCommerceRemoveEntryGroupStrategy"/>
	<bean id="defaultCommerceRemoveEntryGroupStrategy"
		  class="de.hybris.platform.commerceservices.order.impl.DefaultCommerceRemoveEntryGroupStrategy">
		<property name="commerceRemoveEntryGroupHooks" ref="commerceRemoveEntryGroupMethodHooks"/>
		<property name="configurationService" ref="configurationService"/>
		<property name="updateCartEntryStrategy" ref="commerceUpdateCartEntryStrategy"/>
		<property name="entryGroupService" ref="entryGroupService"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<!-- Quote action & state related configuration -->

	<alias name="defaultQuoteUserTypeActionStateMap" alias="quoteUserTypeActionStateMap"/>
	<util:map id="defaultQuoteUserTypeActionStateMap" key-type="de.hybris.platform.commerceservices.enums.QuoteUserType" value-type="java.lang.Map">
		<entry key="BUYER" value-ref="buyerQuoteActionAllowedStateMap"/>
		<entry key="SELLER" value-ref="sellerQuoteActionAllowedStateMap"/>
		<entry key="SELLERAPPROVER" value-ref="sellerApproverQuoteActionAllowedStateMap"/>
	</util:map>

	<alias name="defaultQuoteUserTypeActionStateTransitionMap" alias="quoteUserTypeActionStateTransitionMap"/>
	<util:map id="defaultQuoteUserTypeActionStateTransitionMap" key-type="de.hybris.platform.commerceservices.enums.QuoteUserType" value-type="java.lang.Map">
		<entry key="BUYER" value-ref="buyerQuoteActionStateTransitionMap"/>
		<entry key="SELLER" value-ref="sellerQuoteActionStateTransitionMap"/>
		<entry key="SELLERAPPROVER" value-ref="sellerApproverQuoteActionStateTransitionMap"/>
	</util:map>

	<alias name="defaultQuoteSnapshotStateTransitionMap" alias="quoteSnapshotStateTransitionMap"/>
	<util:map id="defaultQuoteSnapshotStateTransitionMap" key-type="de.hybris.platform.core.enums.QuoteState" value-type="de.hybris.platform.core.enums.QuoteState">
		<entry key="BUYER_SUBMITTED" value="SELLER_REQUEST"/>
		<entry key="SELLER_SUBMITTED" value="SELLERAPPROVER_PENDING"/>
		<entry key="SELLERAPPROVER_APPROVED" value="BUYER_OFFER"/>
		<entry key="SELLERAPPROVER_REJECTED" value="SELLER_REQUEST"/>
	</util:map>

	<!-- Buyer -->
	<alias name="defaultBuyerQuoteActionAllowedStateMap" alias="buyerQuoteActionAllowedStateMap"/>
	<util:map id="defaultBuyerQuoteActionAllowedStateMap" key-type="de.hybris.platform.commerceservices.enums.QuoteAction"
			value-type="java.util.Set&lt;de.hybris.platform.core.enums.QuoteState>">
		<entry key="VIEW">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>BUYER_DRAFT</value>
				<value>BUYER_SUBMITTED</value>
				<value>BUYER_OFFER</value>
				<value>BUYER_ACCEPTED</value>
				<value>BUYER_REJECTED</value>
				<value>BUYER_APPROVED</value>
				<value>BUYER_ORDERED</value>
				<value>CANCELLED</value>
				<value>EXPIRED</value>
			</set>
		</entry>
		<entry key="EDIT">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>BUYER_DRAFT</value>
				<value>BUYER_OFFER</value>
				<value>EXPIRED</value>
			</set>
		</entry>
		<entry key="SAVE">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>BUYER_DRAFT</value>
			</set>
		</entry>
		<entry key="SUBMIT">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>BUYER_DRAFT</value>
			</set>
		</entry>
		<entry key="CANCEL">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>BUYER_DRAFT</value>
				<value>BUYER_OFFER</value>
				<value>EXPIRED</value>
			</set>
		</entry>
		<entry key="CHECKOUT">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>BUYER_OFFER</value>
			</set>
		</entry>
		<entry key="REQUOTE">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>CANCELLED</value>
				<value>EXPIRED</value>
				<value>ORDERED</value>
				<value>BUYER_ORDERED</value>
			</set>
		</entry>
	</util:map>

	<alias name="defaultBuyerQuoteActionStateTransitionMap" alias="buyerQuoteActionStateTransitionMap"/>
	<util:map id="defaultBuyerQuoteActionStateTransitionMap" key-type="de.hybris.platform.commerceservices.enums.QuoteAction"
			value-type="de.hybris.platform.core.enums.QuoteState">
		<entry key="CREATE" value="BUYER_DRAFT" />
		<entry key="EDIT" value="BUYER_DRAFT" />
		<entry key="SUBMIT" value="BUYER_SUBMITTED" />
		<entry key="ORDER" value="BUYER_ORDERED" />
		<entry key="CANCEL" value="CANCELLED" />
		<entry key="EXPIRED" value="EXPIRED" />
	</util:map>

	<!-- Seller -->
	<alias name="defaultSellerQuoteActionAllowedStateMap" alias="sellerQuoteActionAllowedStateMap"/>
	<util:map id="defaultSellerQuoteActionAllowedStateMap" key-type="de.hybris.platform.commerceservices.enums.QuoteAction"
			  value-type="java.util.Set&lt;de.hybris.platform.core.enums.QuoteState>">
		<entry key="VIEW">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>CREATED</value>
				<value>SELLER_DRAFT</value>
				<value>SELLER_REQUEST</value>
				<value>SELLER_SUBMITTED</value>
				<value>SELLERAPPROVER_PENDING</value>
				<value>SELLERAPPROVER_APPROVED</value>
				<value>SELLERAPPROVER_REJECTED</value>
				<value>CANCELLED</value>
				<value>BUYER_ORDERED</value>
				<value>EXPIRED</value>
			</set>
		</entry>
		<entry key="EDIT">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>CREATED</value>
				<value>SELLER_DRAFT</value>
				<value>SELLER_REQUEST</value>
			</set>
		</entry>
		<entry key="DISCOUNT">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>SELLER_DRAFT</value>
			</set>
		</entry>
		<entry key="SAVE">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>SELLER_DRAFT</value>
			</set>
		</entry>
		<entry key="SUBMIT">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>SELLER_DRAFT</value>
				<value>SELLER_REQUEST</value>
			</set>
		</entry>
	</util:map>

	<alias name="defaultSellerQuoteActionStateTransitionMap" alias="sellerQuoteActionStateTransitionMap"/>
	<util:map id="defaultSellerQuoteActionStateTransitionMap" key-type="de.hybris.platform.commerceservices.enums.QuoteAction"
			value-type="de.hybris.platform.core.enums.QuoteState">
		<entry key="CREATE" value="SELLER_DRAFT" />
		<entry key="EDIT" value="SELLER_DRAFT" />
		<entry key="SUBMIT" value="SELLER_SUBMITTED" />
	</util:map>

	<!-- Seller Approver-->
	<alias name="defaultSellerApproverQuoteActionAllowedStateMap" alias="sellerApproverQuoteActionAllowedStateMap"/>
	<util:map id="defaultSellerApproverQuoteActionAllowedStateMap" key-type="de.hybris.platform.commerceservices.enums.QuoteAction"
			  value-type="java.util.Set&lt;de.hybris.platform.core.enums.QuoteState>">
		<entry key="VIEW">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>SELLERAPPROVER_DRAFT</value>
				<value>SELLERAPPROVER_PENDING</value>
				<value>SELLERAPPROVER_APPROVED</value>
				<value>SELLERAPPROVER_REJECTED</value>
				<value>CANCELLED</value>
				<value>BUYER_ORDERED</value>
				<value>EXPIRED</value>
			</set>
		</entry>
		<entry key="SAVE">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>SELLERAPPROVER_DRAFT</value>
				<value>SELLERAPPROVER_PENDING</value>
			</set>
		</entry>
		<entry key="APPROVE">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>SELLERAPPROVER_DRAFT</value>
				<value>SELLERAPPROVER_PENDING</value>
			</set>
		</entry>
		<entry key="REJECT">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>SELLERAPPROVER_DRAFT</value>
				<value>SELLERAPPROVER_PENDING</value>
			</set>
		</entry>
	</util:map>

	<alias name="defaultSellerApproverQuoteActionStateTransitionMap" alias="sellerApproverQuoteActionStateTransitionMap" />
	<util:map id="defaultSellerApproverQuoteActionStateTransitionMap" key-type="de.hybris.platform.commerceservices.enums.QuoteAction"
		value-type="de.hybris.platform.core.enums.QuoteState">
		<entry key="EDIT" value="SELLERAPPROVER_DRAFT" />
		<entry key="APPROVE" value="SELLERAPPROVER_APPROVED" />
		<entry key="REJECT" value="SELLERAPPROVER_REJECTED" />
	</util:map>

	<alias name="defaultOrderQuoteDiscountValuesAccessor" alias="orderQuoteDiscountValuesAccessor" />
	<bean id="defaultOrderQuoteDiscountValuesAccessor" class="de.hybris.platform.commerceservices.order.impl.DefaultOrderQuoteDiscountValuesAccessor" />

	<alias name="defaultCommerceQuoteUtils" alias="commerceQuoteUtils" />
	<bean id="defaultCommerceQuoteUtils" class="de.hybris.platform.commerceservices.util.CommerceQuoteUtils">
		<property name="orderQuoteDiscountValuesAccessor" ref="orderQuoteDiscountValuesAccessor" />
	</bean>

	<alias name="defaultCommerceQuoteCartCalculationMethodHook" alias="commerceQuoteCartCalculationMethodHook" />
	<bean id="defaultCommerceQuoteCartCalculationMethodHook" class="de.hybris.platform.commerceservices.order.hook.impl.DefaultCommerceQuoteCartCalculationMethodHook">
		<property name="orderQuoteDiscountValuesAccessor" ref="orderQuoteDiscountValuesAccessor" />
		<property name="calculationService" ref="calculationService" />
		<property name="modelService" ref="modelService" />
	</bean>

	<bean id="commerceQuoteCartCalculationMethodHookMergeDirective" depends-on="commerceCartCalculationMethodHooks" parent="listMergeDirective">
		<property name="add" ref="commerceQuoteCartCalculationMethodHook" />
	</bean>

	<alias name="defaultVoucherRedemptionPlaceOrderMethodHook" alias="voucherRedemptionPlaceOrderMethodHook" />
	<bean id="defaultVoucherRedemptionPlaceOrderMethodHook"
		  class="de.hybris.platform.commerceservices.order.hook.impl.DefaultVoucherRedemptionPlaceOrderMethodHook">
		<property name="voucherService" ref="voucherService" />
	</bean>

	<bean id="voucherRedeptionPlaceOrderMethodHookListMergeDirective" depends-on="commercePlaceOrderMethodHooks" parent="listMergeDirective" >
		<property name="add" ref="voucherRedemptionPlaceOrderMethodHook" />
	</bean>

	<alias name="defaultVoucherRedeemableCartValidationMethodHook" alias="voucherRedeemableCartValidationMethodHook" />
	<bean id="defaultVoucherRedeemableCartValidationMethodHook" class="de.hybris.platform.commerceservices.order.hook.impl.DefaultVoucherRedeemableCartValidationMethodHook">
		<property name="voucherService" ref="voucherService" />
		<property name="voucherModelService" ref="voucherModelService" />
	</bean>

	<bean id="voucherRedeemableCartValidationMethodHookMergeDirective" depends-on="cartValidationHooks" parent="listMergeDirective" >
       <property name="add" ref="voucherRedeemableCartValidationMethodHook" />
    </bean>

	<!-- Consent -->

	<alias name="defaultConsentTemplateDao" alias="consentTemplateDao"/>
	<bean id="defaultConsentTemplateDao" class="de.hybris.platform.commerceservices.consent.dao.impl.DefaultConsentTemplateDao" />

	<alias name="defaultConsentDao" alias="consentDao"/>
	<bean id="defaultConsentDao" class="de.hybris.platform.commerceservices.consent.dao.impl.DefaultConsentDao" />

	<alias name="defaultCommerceConsentService" alias="commerceConsentService"/>
	<bean id="defaultCommerceConsentService" class="de.hybris.platform.commerceservices.consent.impl.DefaultCommerceConsentService">
		<property name="modelService" ref="modelService"/>
		<property name="timeService" ref="timeService"/>
		<property name="consentDao" ref="consentDao"/>
		<property name="consentTemplateDao" ref="consentTemplateDao"/>
		<property name="eventService" ref="eventService"/>
		<property name="userService" ref="userService"></property>
	</bean>

	<alias name="defaultAnonymousConsentChangeEventFactory" alias="anonymousConsentChangeEventFactory" />
	<bean id="defaultAnonymousConsentChangeEventFactory" class="de.hybris.platform.commerceservices.consent.impl.DefaultAnonymousUserConsentChangeEventFactory">
		<property name="providers" ref="anonymousConsentChangeEventDataProviders" />
	</bean>

	<util:list id="anonymousConsentChangeEventDataProviders" />

	<bean id="consentCodeGenerator" class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator">
        <property name="key" value="${keygen.userConsent.code.name}"/>
        <property name="digits" value="${keygen.userConsent.code.digits}"/>
        <property name="start" value="${keygen.userConsent.code.start}"/>
        <property name="type" value="${keygen.userConsent.code.type}"/>
        <property name="template" value="${keygen.userConsent.code.template}"/>
    </bean>

	<alias name="defaultConsentPrepareInterceptor" alias="consentPrepareInterceptor"/>
    <bean id="defaultConsentPrepareInterceptor" class="de.hybris.platform.commerceservices.consent.interceptors.DefaultConsentPrepareInterceptor">
        <property name="keyGenerator" ref="consentCodeGenerator"/>
    </bean>

    <bean id="consentPrepareMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
        <property name="interceptor" ref="consentPrepareInterceptor"/>
        <property name="typeCode" value="Consent"/>
    </bean>

    <!-- Customer cleanup -->
    <bean id="commerceServicesCustomerCleanupHook" class="de.hybris.platform.commerceservices.retention.impl.CommerceServicesCustomerCleanupHook">
	    <property name="modelService" ref="modelService"/>
	    <property name="consentDao" ref="consentDao"/>
	    <property name="flexibleSearchService" ref="flexibleSearchService"/>
	    <property name="writeAuditRecordsDAO" ref="writeAuditRecordsDAO"/>
	</bean>

	<bean id="commerceServicesCustomerCleanupHookMergeDirective" depends-on="customerCleanupHooks" parent="listMergeDirective" >
        <property name="add" ref="commerceServicesCustomerCleanupHook" />
    </bean>

    <!-- Order cleanup -->
    <bean id="commerceServicesOrderCleanupHook" class="de.hybris.platform.commerceservices.retention.impl.CommerceServicesOrderCleanupHook">
	    <property name="flexibleSearchService" ref="flexibleSearchService"/>
	    <property name="modelService" ref="modelService"/>
	    <property name="writeAuditRecordsDAO" ref="writeAuditRecordsDAO"/>
	    <property name="timeService" ref="timeService"/>
	</bean>

	<bean id="commerceServicesOrderCleanupHookMergeDirective" depends-on="orderCleanupHooks" parent="listMergeDirective" >
        <property name="add" ref="commerceServicesOrderCleanupHook" />
    </bean>
</beans>
