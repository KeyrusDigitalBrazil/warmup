# -----------------------------------------------------------------------
# [y] hybris Platform
#
# Copyright (c) 2018 SAP SE or an SAP affiliate company.  All rights reserved.
#
# This software is the confidential and proprietary information of SAP
# ("Confidential Information"). You shall not disclose such Confidential
# Information and shall use it only in accordance with the terms of the
# license agreement you entered into with SAP.
# -----------------------------------------------------------------------
# you can put key/value pairs here.
# Use Config.getParameter(..) to retrieve the values during runtime.


# Specifies the location of the spring context file putted automatically to the global platform application context.
commerceservices.application-context=commerceservices-spring.xml

#encryption keys for the secure token service
commerceservices.securetoken.signature-key=31755d664f3857504c3347647670536d297c5324386b305a4267537027
commerceservices.securetoken.encryption-key=466a5d3e4d6c29355a7a2f41517a48262a3b6b6a6d62494e75356d2072

# PaymentInfo validates that the card number is plausible.
# Setting paymentinfo.creditcard.checknumber=false will prevent PaymentInfo.createItem()
# from throwing an exception if the card number is invalid.
paymentinfo.creditcard.checknumber=false

#Order Code Generator configuration. By default set to orderCodeGenerator
commerceservices.orderCode.keyGenerator=orderCodeGenerator

#Fallback taxcode is returned by DefaultTaxCodeStrategy when it cannot find taxCode for product and taxArea
#Different value can be configure for different base store by adding base store name at the end of property name
#commerceservices.externaltax.fallbacktaxcode=P0000000
#commerceservices.externaltax.fallbacktaxcode.<baseStoreId>=P0000000

#Guest User order status page expiry timeline
guest.orderstatuspage.access.expiry.month=3


commerceservices.authorizepaymentmethodhook.enabled=true
commerceservices.commerceaddtocartmethodhook.enabled=true
commerceservices.commercecartcalculationmethodhook.enabled=true
commerceservices.commerceplaceordermethodhook.enabled=true
commerceservices.commerceupdatecartentryhook.enabled=true
commerceservices.commercesavecartmethodhook.enabled=true
commerceservices.commerceflagfordeletionmethodhook.enabled=true
commerceservices.commercesavecartrestorationmethodhook.enabled=true
commerceservices.commerceclonesavedcartmethodhook.enabled=true
commerceservices.commerceremoveentrygroupmethodhook.enabled=true

#########
# Default desktop UI experience to indicate the appropriate resources to load
# Available options are 'responsive' or 'desktop' (the original accelerator desktop exp)
# Indicates to the import services which impex to load on initialization and view resolvers which path
# for resources
commerceservices.default.desktop.ui.experience=responsive
commerceservices.mobile.data.import=false

# Defines after how many days a saved cart expires
commerceservices.saveCart.expiryTime.days=30

# Defines how long cart will be valid in seconds
commerceservices.cartValidityPeriod=12960000

# Defines how long a quote will be valid in seconds
commerceservices.quoteValidityPeriod=12960000
commerceservices.quote.comment.domain=quoteDomain
commerceservices.quote.comment.component=quoteComponent
commerceservices.quote.comment.commentType=quoteComment

#########
# Access rights for organization related CRUD operations. The properties below each take a comma separated
# list of usergroups. By default members of orgemployeegroup can perform all CRUD operations. For a finer
# grained access control create your own usergroups and overwrite the properties in your extension.
commerceservices.organization.rights.create.groups=orgemployeegroup
commerceservices.organization.rights.edit.groups=orgemployeegroup
commerceservices.organization.rights.edit.parent.groups=orgemployeegroup
commerceservices.organization.rights.view.groups=orgemployeegroup

##########
# Defines organization related user groups(=roles). It will be used by OrganizationRolesAttribute dynamic attribute handler
# in Employee type. The Employee.organizationRoles attribute is determined by filtering out non-organization related roles
# It can take a comma separated list of usergroups.
commerceservices.organization.roles=orgemployeegroup

##########
# Definition of user groups that define organization related administrators
commerceservices.organization.roles.admin.groups=orgemployeegroup

##########
# This property is used for incrementing the numbering in the suffix of the saved cart name during cloning.
# It starts with number copy 2 and then increments the index for each clone.If this property is empty it uses
# the default implementation which appends Copy of as a prefix to the save cart name.
#commerceservices.clone.savecart.name.regex.storeuid=(\\s+\\d*)$

##########
# Quote User Type Groups
commerceservices.quote.buyer.usergroup.uid=customergroup
commerceservices.quote.seller.usergroup.uid=orgemployeegroup
commerceservices.quote.seller.approver.usergroup.uid=orgemployeegroup

############
# Global Quote seller approval auto approval threshold regardless of currency
commerceservices.quote.seller.auto.approval.threshold=0

############
# Defines the configurable default offer validity period in days. This property is being used to set the the expiration time
# for a quote when a seller submits the quote to the seller approver and the expiration time for it is set to a date before
# the current date plus the minimum offer validity period in days or not set at all.
commerceservices.quote.default.offer.validity.period.days=30
# Defines the minimum offer validity period in days
commerceservices.quote.min.offer.validity.period.days=1

# The minimum amount to request a quote regardless of currency
quote.request.initiation.threshold=25000

# UserConsent code generator parameters:
keygen.userConsent.code.name=userConsent
keygen.userConsent.code.digits=8
keygen.userConsent.code.start=00000000
keygen.userConsent.code.type=alphanumeric
keygen.userConsent.code.template=$

commerceservices.org.unit.path.generation.enabled=true