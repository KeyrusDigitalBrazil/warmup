<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2018 SAP SE or an SAP affiliate company. All rights reserved.

 This software is the confidential and proprietary information of SAP
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with SAP.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd 
           http://www.springframework.org/schema/util 
           http://www.springframework.org/schema/util/spring-util.xsd">

	<import resource="classpath:ticketsystem/ticketsystem-spring-services.xml"/>
	<import resource="classpath:ticketsystem/ticketsystem-spring-interceptors.xml"/>

	<!--
		Mappings
	-->
	<alias name="defaultTicketStateTransitionMap" alias="ticketStateTransitionMap"/>
	<util:map id="defaultTicketStateTransitionMap">
		<entry>
			<key>
				<util:constant static-field="de.hybris.platform.ticket.enums.CsTicketState.NEW"/>
			</key>
			<util:list>
				<util:constant static-field="de.hybris.platform.ticket.enums.CsTicketState.OPEN"/>
			</util:list>
		</entry>
		<entry>
			<key>
				<util:constant static-field="de.hybris.platform.ticket.enums.CsTicketState.OPEN"/>
			</key>
			<util:list>
				<util:constant static-field="de.hybris.platform.ticket.enums.CsTicketState.CLOSED"/>
			</util:list>
		</entry>
		<entry>
			<key>
				<util:constant static-field="de.hybris.platform.ticket.enums.CsTicketState.CLOSED"/>
			</key>
			<util:list>
				<util:constant static-field="de.hybris.platform.ticket.enums.CsTicketState.OPEN"/>
			</util:list>
		</entry>
	</util:map>

	<alias name="defaultRecipientTypeToContextClassMap" alias="recipientTypeToContextClassMap"/>
	<util:map id="defaultRecipientTypeToContextClassMap">
		<entry>
			<key><util:constant static-field="de.hybris.platform.ticket.enums.CsEmailRecipients.CUSTOMER"/></key>
			<value>de.hybris.platform.ticket.email.context.CustomerTicketContext</value>
		</entry>
		<entry>
			<key><util:constant static-field="de.hybris.platform.ticket.enums.CsEmailRecipients.ASSIGNEDAGENT"/></key>
			<value>de.hybris.platform.ticket.email.context.AgentTicketContext</value>
		</entry>
		<entry>
			<key><util:constant static-field="de.hybris.platform.ticket.enums.CsEmailRecipients.ASSIGNEDGROUP"/></key>
			<value>de.hybris.platform.ticket.email.context.AgentGroupTicketContext</value>
		</entry>
	</util:map>


	<alias name="defaultAssociatedTicketObjectResolverMapping" alias="associatedTicketObjectResolverMap"/>
	<util:map id="defaultAssociatedTicketObjectResolverMapping">
		<entry key="Cart" value-ref="cartResolver"/>
		<entry key="Order" value-ref="orderResolver"/>
	</util:map>

	<bean id="cartResolver" class="de.hybris.platform.ticket.resolver.DefaultCartResolver"></bean>
	<bean id="orderResolver" class="de.hybris.platform.ticket.resolver.DefaultOrderResolver"></bean>

	<alias name="defaultValueType2ChangeRecordType" alias="valueType2ChangeRecordType"/>
	<util:map id="defaultValueType2ChangeRecordType">
		<entry key="java.lang.String" value="CsTicketChangeEventStringEntry"/>
		<entry key="CsTicketCategory" value="CsTicketChangeEventCsTicketCategoryEntry"/>
		<entry key="CsTicketPriority" value="CsTicketChangeEventCsTicketPriorityEntry"/>
		<entry key="CsTicketState" value="CsTicketChangeEventCsTicketStateEntry"/>
		<entry key="Employee" value="CsTicketChangeEventEmployeeEntry"/>
		<entry key="CsAgentGroup" value="CsTicketChangeEventCsAgentGroupEntry"/>
	</util:map>

	<alias name="defaultEventType2TemplateCode" alias="eventType2TemplateCode"/>
	<util:map id="defaultEventType2TemplateCode">
		<entry key="ticketCreationEvent" value="TicketSystem_CreationEventRenderTemplate" />
	</util:map>

	<alias name="defaultCsTicketCodeGenerator" alias="csTicketCodeGenerator"/>
	<bean id="defaultCsTicketCodeGenerator" class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator" >
		<property name="key" value="${keygen.csticket.code.name}"/>
		<property name="digits" value="${keygen.csticket.code.digits}"/>
		<property name="start" value="${keygen.csticket.code.start}"/>
        <property name="type" value="${keygen.csticket.code.type}"/>
	</bean>

	<!--
		sequence generators
	-->
	<alias name="defaultCsTicketEventCodeGenerator" alias="csTicketEventCodeGenerator"/>
	<bean id="defaultCsTicketEventCodeGenerator" class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator">
		<property name="key" value="${keygen.csticket.event.code.name}"/>
		<property name="digits" value="${keygen.csticket.code.digits}"/>
		<property name="start" value="${keygen.csticket.code.start}"/>
        <property name="type" value="${keygen.csticket.code.type}"/>
	</bean>

	<alias name="defaultTicketDao" alias="ticketDao"/>
	<bean id="defaultTicketDao" class="de.hybris.platform.ticket.dao.impl.DefaultTicketDao" parent="abstractItemDao" scope="tenant">
		<property name="pagedFlexibleSearchService" ref="pagedFlexibleSearchService" />
	</bean>
	
	<alias name="defaultAgentDao" alias="agentDao" />
	<bean id="defaultAgentDao" class="de.hybris.platform.ticket.dao.impl.DefaultAgentDao" parent="abstractItemDao" scope="tenant" />

	<alias name="defaultTicketUpdateStrategy" alias="ticketUpdateStrategy"/>
	<bean id="defaultTicketUpdateStrategy" class="de.hybris.platform.ticket.strategies.impl.DefaultTicketUpdateStrategy">
		<property name="ticketAttributeChangeEventStrategy" ref="ticketAttributeChangeEventStrategy"/>
		<property name="availableNextStates" ref="ticketStateTransitionMap"/>
		<property name="ticketEventFactory" ref="ticketEventFactory"/>
		<property name="ticketChangeEventType" value="ticketChangeEvent"/>
		<property name="ticketAssigndEventType" value="ticketAssignedEvent"/>
		<property name="modelService" ref="modelService"/>
	</bean>
	
	<!--
		strategies
	-->
	<alias name="defaultTicketAttributeChangeEventStrategy" alias="ticketAttributeChangeEventStrategy"/>
	<bean id="defaultTicketAttributeChangeEventStrategy" class="de.hybris.platform.ticket.strategies.impl.DefaultTicketAttributeChangeEventStrategy">
		<property name="typeService" ref="typeService"/>
		<property name="modelService" ref="modelService"/>
		<property name="valueType2ChangeRecordType" ref="valueType2ChangeRecordType"/>
		<property name="defaultChangeRecordType" value="CsTicketChangeEventEntry"/>		
	</bean>

	<alias name="defaultTicketEventStrategy" alias="ticketEventStrategy"/>
	<bean id="defaultTicketEventStrategy" class="de.hybris.platform.ticket.strategies.impl.DefaultTicketEventStrategy">
		<property name="customerNoteCommentType" value="customerNote"/>
		<property name="agentNoteCommentType" value="agentNote"/>
		<property name="emailCommentType" value="customerEmail"/>
		<property name="ticketEventFactory" ref="ticketEventFactory"/>
		<property name="ticketCreatedType" value="ticketCreationEvent"/>
		<property name="modelService" ref="modelService"/>
		<property name="openState">
			<util:constant static-field="de.hybris.platform.ticket.enums.CsTicketState.OPEN"/>
		</property>
	</bean>
	
	<alias name="defaultTicketRenderStrategy" alias="ticketRenderStrategy"/>
	<bean id="defaultTicketRenderStrategy" class="de.hybris.platform.ticket.strategies.impl.DefaultTicketRenderStrategy">
		<property name="defaultTemplateCode" value="TicketSystem_DefaultEventRenderTemplate"/>
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
		<property name="eventType2TemplateCode" ref="eventType2TemplateCode" />
		<property name="rendererService" ref="rendererService" />
	</bean>

	<alias name="asyncTicketEventEmailStrategy" alias="ticketEventEmailStrategy"/>
	<bean id="defaultTicketEventEmailStrategy" class="de.hybris.platform.ticket.strategies.impl.DefaultTicketEventEmailStrategy">
		<property name="flexibleSearch" ref="flexibleSearchService"/>
		<property name="recipientTypeToContextClassMap" ref="recipientTypeToContextClassMap"/>
		<property name="mediaService" ref="mediaService"/>
		<property name="rendererService" ref="rendererService" />
		<property name="modelService" ref="modelService" />
	</bean>

    <bean id="asyncTicketEventEmailStrategy" class="de.hybris.platform.ticket.strategies.impl.AsyncTicketEmailStrategy">
        <property name="taskService" ref="taskService" />
		<property name="modelService" ref="modelService" />
        <property name="i18NService" ref="i18NService" />
    </bean>

    <bean id="sendEmailTaskRunner" class="de.hybris.platform.ticket.task.SendEmailTaskRunner" >
        <property name="i18NService" ref="i18NService" />
        <property name="ticketEventEmailStrategy" ref="defaultTicketEventEmailStrategy"/>
    </bean>

	<alias name="defaultTicketResolutionStrategy" alias="ticketResolutionStrategy"/>
	<bean id="defaultTicketResolutionStrategy" class="de.hybris.platform.ticket.strategies.impl.DefaultTicketResolutionStrategy">
		<property name="ticketUpdateStrategy" ref="ticketUpdateStrategy"/>
		<property name="ticketAttributeChangeEventStrategy" ref="ticketAttributeChangeEventStrategy"/>
		<property name="defaultResolvedTicketState">
			<util:constant static-field="de.hybris.platform.ticket.enums.CsTicketState.CLOSED"/>
		</property>
		<property name="defaultUnresolvedTicketState">
			<util:constant static-field="de.hybris.platform.ticket.enums.CsTicketState.OPEN"/>
		</property>
		<property name="ticketEventFactory" ref="ticketEventFactory"/>
		<property name="resolveEventType" value="ticketResolutionEvent"/>
		<property name="unresolveEventType" value="ticketUnResolutionEvent"/>
		<property name="agentNoteEventType" value="agentNote"/>
		<property name="modelService" ref="modelService" />
	</bean>

	<alias name="defaultTicketEventFactory" alias="ticketEventFactory"/>
	<bean id="defaultTicketEventFactory" class="de.hybris.platform.ticket.factory.impl.DefaultTicketEventFactoryImpl"
		  parent="abstractBusinessService" scope="tenant" >
		<property name="commentService" ref="commentService"/>
		<property name="userService" ref="userService"/>
		<property name="modelService" ref="modelService"/>
		<property name="sessionService" ref="sessionService"/>
		<property name="txManager" ref="txManager"/>
	</bean>
	
	<bean id="defaultOrderFraudEmployeeNotificationEventListener" class="de.hybris.platform.ticket.event.impl.DefaultOrderFraudEmployeeNotificationEventListener">
		<property name="ticketBusinessService" ref="ticketBusinessService"/>
		<property name="userService" ref="userService"/>
		<property name="tenantService" ref="tenantService" />
		<property name="clusterService" ref="clusterService" />		
	</bean>

	<bean id="ticketsAttributeHandler" class="de.hybris.platform.ticket.model.TicketsAttributeHandler" />
	
	<alias name="defaultCartResolverForCustomerTicket" alias="cartResolver"/>
	<bean id="defaultCartResolverForCustomerTicket" class="de.hybris.platform.ticket.resolver.DefaultCartResolver">
		<property name="userService" ref="userService"/>
		<property name="commerceCartService" ref="commerceCartService"/>
	</bean>
	
	<alias name="defaultOrderResolverForCustomerTicket" alias="orderResolver"/>
    <bean id="defaultOrderResolverForCustomerTicket" class="de.hybris.platform.ticket.resolver.DefaultOrderResolver">
    	<property name="userService" ref="userService"/>
    	<property name="baseStoreService" ref="baseStoreService"/>
    	<property name="customerAccountService" ref="customerAccountService"/>
    </bean>

    <alias name="defaultTicketParameterPopulator" alias="ticketParameterPopulator"/>
    <bean id="defaultTicketParameterPopulator"
          class="de.hybris.platform.ticket.converters.populator.CsTicketPopulator">
    </bean>

    <alias name="defaultTicketParameterConverter" alias="ticketParameterConverter"/>
    <bean id="defaultTicketParameterConverter" parent="abstractPopulatingConverter">
        <property name="targetClass" value="de.hybris.platform.ticket.model.CsTicketModel"/>
        <property name="populators">
            <list merge="true">
                <ref bean="ticketParameterPopulator"/>
            </list>
        </property>
    </bean>
    
    <alias name="defaultTicketAttachmentsService" alias="ticketAttachmentsService"/>
    <bean id="defaultTicketAttachmentsService" class="de.hybris.platform.ticket.service.impl.DefaultTicketAttachmentsService">
    	<property name="userService" ref="userService"/>
    	<property name="mediaService" ref="mediaService"/>
        <property name="mediaPermissionService" ref="mediaPermissionService"/>
        <property name="catalogId" value="Default"/>
        <property name="catalogVersionName" value="Online"/>
        <property name="catalogVersionService" ref="catalogVersionService"/>
        <property name="commonCsAgentUserGroup" value="customersupportagentrole"/>
        <property name="folderName" value="customersupportattachments"/>
        <property name="modelService" ref="modelService"/>
		<property name="allowedUploadedFormats" ref="allowedUploadedFormats"/>
	</bean>

	<alias name="defaultAllowedUploadedFormats" alias="allowedUploadedFormats"/>
	<bean name="defaultAllowedUploadedFormats" class="java.lang.String">
		<constructor-arg>
			<value>${customersupportattachments.allowedFormats}</value>
		</constructor-arg>
	</bean>
	
	<alias name="defaultCustomerSupportEventDao" alias="customerSupportEventDao"/>
	<bean id="defaultCustomerSupportEventDao" class="de.hybris.platform.ticket.event.dao.impl.DefaultCustomerSupportEventDao">
		<constructor-arg value="CsSessionEvent" />
		<property name="pagedFlexibleSearchService" ref="pagedFlexibleSearchService"/>
		<property name="timeService" ref="timeService"/>
	</bean>

	<bean id="sessionEventsRemovalJob"
		  class="de.hybris.platform.ticket.cronjob.SessionEventsRemovalJob"
		  parent="abstractJobPerformable">
		<property name="customerSupportEventDao" ref="customerSupportEventDao"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<!-- Strategy, which cleans ticket related models, but not ticket -->
	<alias name="defaultCsTicketCleanupStrategy" alias="csTicketCleanupStrategy"/>
	<bean id="defaultCsTicketCleanupStrategy" class="de.hybris.platform.ticket.retention.impl.DefaultCsTicketCleanupStrategy">
		<property name="modelService" ref="modelService"/>
		<property name="ticketService" ref="ticketService"/>
		<property name="writeAuditRecordsDAO" ref="writeAuditRecordsDAO"/>
	</bean>

	<!-- CsTicket cleanup by customer removal -->
	<bean id="csTicketsbyCustomerCleanupHookMergeDirective" depends-on="customerCleanupHooks" parent="listMergeDirective" >
		<property name="add" ref="csTicketsbyCustomerCleanupHook" />
	</bean>
	<bean id="csTicketsbyCustomerCleanupHook" class="de.hybris.platform.ticket.retention.impl.CsTicketsByCustomerCleanupHook">
		<property name="modelService" ref="modelService"/>
		<property name="csTicketCleanupStrategy" ref="csTicketCleanupStrategy"/>
	</bean>
	<!-- Simple CsTicket cleanup -->
	<bean id="csTicketCleanupHook" class="de.hybris.platform.ticket.retention.impl.CsTicketCleanupHook">
		<property name="csTicketCleanupStrategy" ref="csTicketCleanupStrategy"/>
	</bean>

	<bean id="csTicketCleanupHookMergeDirective" depends-on="csTicketCleanupHooks" parent="listMergeDirective" >
		<property name="add" ref="csTicketCleanupHook" />
	</bean>

	<util:list id="csTicketCleanupHooks" value-type="de.hybris.platform.retention.hook.ItemCleanupHook"/>
	<util:list id="csTicketRetentionHooks" value-type="de.hybris.platform.retention.hook.ItemCleanupHook"/>
</beans>
