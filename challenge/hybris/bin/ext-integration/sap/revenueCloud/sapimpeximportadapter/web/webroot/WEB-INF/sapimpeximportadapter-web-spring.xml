<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2018 SAP SE or an SAP affiliate company. All rights reserved.

 This software is the confidential and proprietary information of SAP
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with SAP.
-->
<!-- WARNING: This is the Spring WEB configuration file. If you want to replace items or managers you have to do this from the extensions 
	core configuration file (importwebservice/resources/importwebservice-spring.xml) -->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
			  http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.sap.hybris.sapimpeximportadapter"  scope-resolver="de.hybris.platform.spring.IgnoreTenantScopeMetadataResolver" />
	
	<import resource="${sapimpeximportadapter.security.config:config/security-spring.xml}"/>
	<import resource="config/error-config-spring.xml"/>

	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>/WEB-INF/messages/messages</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<!-- Spring managed FilterChain for hybris Filter stack -->
	<bean id="sapimpeximportadapterPlatformFilterChain" class="de.hybris.platform.servicelayer.web.PlatformFilterChain">
		<constructor-arg>
			<list>
				<!-- Filter that catches and resolves exceptions thrown from other filters. Can be uncommented if you need such functionality -->
				<ref bean="log4jFilter" />
				<ref bean="tenantActivationFilter" />
				<ref bean="restSessionFilter" />
				<!-- Security -->
				<ref bean="springSecurityFilterChain" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="restSessionFilter" class="de.hybris.platform.webservicescommons.filter.RestSessionFilter">
		<property name="sessionService" ref="sessionService" />
	</bean>

	<!-- Filter that catches and resolves exceptions thrown from other filters. Can be added to filter chain if you need such functionality -->
	<alias alias="exceptionTranslationFilter" name="defaultExceptionTranslationFilter" />
	<bean id="defaultExceptionTranslationFilter" class="de.hybris.platform.webservicescommons.filter.ExceptionTranslationFilter">
		<property name="restHandlerExceptionResolver" ref="restHandlerExceptionResolver" />
	</bean>

	
</beans>
