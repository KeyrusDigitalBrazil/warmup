/*
 * [y] hybris Platform
 *
 * Copyright (c) 2018 SAP SE or an SAP affiliate company.  All rights reserved.
 *
 * This software is the confidential and proprietary information of SAP
 * ("Confidential Information"). You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms of the
 * license agreement you entered into with SAP.
 */
package com.hybris.yprofile.consent.services;

import de.hybris.platform.core.model.user.UserModel;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * ConsentService interface. Service is responsible to generate and provide the consent reference.
 */
public interface ConsentService {


    /**
     * Checks if the user (logged In or Anonymous) has granted the consent to allow profile tracking
     *
     * @param request the http request
     * @return true or false
     */
    boolean isProfileTrackingConsentGiven(final HttpServletRequest request);

    /**
     * Saves the profile consent separately in a cookie and session attribute
     * @param request http request
     * @param response http reponse
     * @param consent true or false
     */
    void setProfileConsentCookieAndSession(final HttpServletRequest request, final HttpServletResponse response, final boolean consent);

    /**
     * It gets the consent reference stored in a cookie (generated by ProfileTag)
     * and saves it in the session and in the user model (for logged In users) for further events
     * @param request Http request
     */
    void saveConsentReferenceInSessionAndCurrentUserModel(final HttpServletRequest request);

    /**
     * Fetches the consent reference from cookie
     * @param siteId base site identifier
     * @param request http request
     * @return consent reference
     */
    String getConsentReferenceFromCookie(final String siteId, final HttpServletRequest request);

    /**
     * Fetches the consent reference from session
     * @return consent reference
     */
    String getConsentReferenceFromSession();

    /**
     * Deletes the consent reference when the user revokes the consent for profile or user closes the account
     * @param userModel the user
     * @param baseSiteId the base site id
     */
    void deleteConsentReferenceInConsentServiceAndInUserModel(final UserModel userModel, final String baseSiteId);

    /**
     * removes the consent reference cookie
     * @param response http response
     */
    void removeConsentReferenceCookieAndSession(final HttpServletResponse response);
}
